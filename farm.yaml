tabs:
  - Farm

frames:
  # ==== Simulation frames ==== 
  - name:  frame_farmsetup
    tab:   Farm
    title: Wind farm setup

  - name:  frame_farmsetup1
    frame: frame_farmsetup
    title: Options
    row:   2
    kwargs:
      borderwidth: 0
    toggled: True

  - name:  frame_farmsetup1a
    frame: frame_farmsetup1
    title: User comments
    kwargs:
      borderwidth: 0

  - name:  frame_farmsetup2
    frame: frame_farmsetup
    title: Actions
    row:   3
    kwargs:
      borderwidth: 0

  - name:  frame_farmturbines
    tab:   Farm
    title: Wind farm turbine layout
    toggled: True

  - name:  frame_farmturbines1
    frame: frame_farmturbines
    title: CSV Contents
    row:   1
    kwargs:
      borderwidth: 0

  - name:  frame_farmturbines2
    frame: frame_farmturbines
    title: Layout options
    row:   2
    kwargs:
      borderwidth: 0

  - name:  frame_farmturbines3
    frame: frame_farmturbines
    title: Actions
    row:   3
    kwargs:
      borderwidth: 0

  - name:  frame_farmrefinement
    tab:   Farm
    title: Farm refinement zones
    toggled: True

  - name:  frame_farmrefinement1
    frame: frame_farmrefinement
    title: CSV Contents
    row:   1
    kwargs:
      borderwidth: 0
  - name:  frame_farmrefinement2
    frame: frame_farmrefinement
    title: Refinement options
    row:   2
    kwargs:
      borderwidth: 0
  - name:  frame_farmrefinement3
    frame: frame_farmrefinement
    title: Actions
    row:   3
    kwargs:
      borderwidth: 0

  - name:  frame_farmsampling
    tab:   Farm
    title: Farm sampling
    toggled: True

  - name:  frame_farmsampling1
    frame: frame_farmsampling
    title: CSV Contents
    row:   1
    kwargs:
      borderwidth: 0
  - name:  frame_farmsampling2
    frame: frame_farmsampling
    title: Sampling options
    row:   2
    kwargs:
      borderwidth: 0
  - name:  frame_farmsampling3
    frame: frame_farmsampling
    title: Actions
    row:   3
    kwargs:
      borderwidth: 0

  - name:  frame_runsweep
    tab:   Farm
    title: Run parameter sweep
    toggled: True

  - name:  frame_runsweep1
    frame: frame_runsweep
    title: ABL parameters
    row:   1
    kwargs:
      borderwidth: 0

  - name:  frame_runsweep2
    frame: frame_runsweep
    title: Case setup
    row:   2
    kwargs:
      borderwidth: 0

  - name:  frame_floris
    tab:   Farm
    title: Setup FLORIS
    toggled: True
      
inputwidgets:
  - name:       farm_setupfile
    frame:      frame_farmsetup
    label:      Farm setup file
    inputtype:  str #filename
    row:        1
    defaultval: ''
    entryopt:
      width:    25
    fileopenopt:
      selecttype: saveas       
      kwargs:
        filetypes: 
          - ["YAML files", "*.yaml"]
          - ["all files", "*.*"]
    outputdef:
      help:     YAML file with all farm inputs

  - name:       farm_embedamrwindinput
    frame:      frame_farmsetup1
    label:      Embed AMR-Wind input
    inputtype:  bool
    defaultval: True
    outputdef:
      help:     Embed AMR-Wind input file in yaml file

  - name:       farm_loadembedamrwindinput
    frame:      frame_farmsetup1
    label:      Load embeded AMR-Wind input
    inputtype:  bool
    defaultval: True
    outputdef:
      help:     Load embeded AMR-Wind input file

  - name:       farm_embedturbinetype
    frame:      frame_farmsetup1
    label:      Embed turbine type
    inputtype:  bool
    defaultval: True
    outputdef:
      help:     Embed turbine type

  - name:       farm_usercomments
    frame:      frame_farmsetup1a
    inputtype:  textbox
    defaultval: |
      Add any optional commments here.
    entryopt:
      width:    50
      height:   5
    outputdef:
      help:     "\nUser comments"
      farmsetup: farm_usercomments
      
  # -------- Turbine layout inputs -------------------
  - name:       turbines_csvtextbox
    frame:      frame_farmturbines1
    inputtype:  textbox
    defaultval: |
      # CSV file should have columns with
      # name, x, y, type, yaw, hubheight, options
    entryopt:
      width:    55
      height:   10
    outputdef:
      help:     "\nTurbine layout"
      farmsetup: turbines_csvtextbox

  - name:       turbines_csvfile
    frame:      frame_farmturbines
    label:      CSV file
    inputtype:  filename
    row:        0
    defaultval: ''
    entryopt:
      width:    25
    fileopenopt:
      kwargs:
        filetypes: 
          - ["CSV files", "*.csv"]
          - ["all files", "*.*"]
    outputdef:
      help:      CSV input file
      farmsetup: turbines_csvfile

  - name:       turbines_deleteprev
    frame:      frame_farmturbines2
    label:      Delete existing turbines
    inputtype:  bool
    defaultval: True
    outputdef:
      help:     Remove all existing turbines before adding these
      farmsetup: turbines_deleteprev

  - name:       turbines_coordsys
    frame:      frame_farmturbines2
    label:      Turbine coordinate sys
    inputtype:  str
    optionlist: ['xy', 'utm', 'latlong']
    defaultval: 'xy'
    outputdef:
      farmsetup: turbines_coordsys

  - name:       turbines_autocalccenter
    frame:      frame_farmturbines2
    label:      Auto calculate farm center
    inputtype:  bool
    defaultval: True
    ctrlelem:
      - input:  turbines_farmcenter
        activewhen: ['', 0]
    outputdef:
      help:     |
        Automatically set farm center to be average of all turbine locations
      farmsetup: turbines_autocalccenter

  - name:       turbines_farmcenter
    frame:      frame_farmturbines2
    label:      Farm center coords (X,Y)
    inputtype:  [float, float]
    #defaultval: True
    outputdef:
      farmsetup: turbines_farmcenter

  - name:       turbines_domainsize
    frame:      frame_farmturbines2
    label:      Farm domain size (X,Y,Z)
    inputtype:  [float, float, float]
    outputdef:
      help:     Size of the computational domain in meters
      farmsetup: turbines_domainsize

  - name:       turbines_createnewdomain
    frame:      frame_farmturbines2
    label:      Create new domain
    inputtype:  bool
    defaultval: True
    outputdef:
      help:     Delete previous domain and level 0 mesh, and create new one
      farmsetup: turbines_createnewdomain

  - name:       turbines_freespace
    frame:      frame_farmturbines2
    label:      Free space
    inputtype:  bool
    defaultval: False
    outputdef:
      help:     Make the domain free space (no bround)
      farmsetup: turbines_freespace

  - name:       turbines_backgroundmeshsize
    frame:      frame_farmturbines2
    label:      Background mesh size [m]
    inputtype:  float
    outputdef:
      help:     Size of the background mesh in meters (optional)
      farmsetup: turbines_backgroundmeshsize

  - name:       turbines_plotnames
    frame:      frame_farmturbines2
    label:      Plot turbine names
    inputtype:  bool
    defaultval: True
    outputdef:
      help:     Plot the turbine names in preview window


  # -------- Refinement zone inputs -------------------
  - name:       refine_csvtextbox
    frame:      frame_farmrefinement1
    inputtype:  textbox
    defaultval: |
      # CSV file should have columns with
      # level, upstream, downstream, lateral, below, above, options
    entryopt:
      width:    55
      height:   10
    outputdef:
      help:     "\nRefine inputs"
      farmsetup: refine_csvtextbox

  - name:       refine_csvfile
    frame:      frame_farmrefinement
    label:      CSV file
    inputtype:  filename
    row:        0
    defaultval: ''
    entryopt:
      width:    25
    fileopenopt:
      kwargs:
        filetypes: 
          - ["CSV files", "*.csv"]
          - ["all files", "*.*"]
    outputdef:
      help:      CSV input file
      farmsetup: refine_csvfile

  - name:       refine_deleteprev
    frame:      frame_farmrefinement2
    label:      Delete existing zones
    inputtype:  bool
    defaultval: True
    outputdef:
      help:     Remove all existing refinement zones before adding these
      farmsetup: refine_deleteprev

  # -------- Sampling plane/probe inputs -------------------
  - name:       sampling_csvtextbox
    frame:      frame_farmsampling1
    inputtype:  textbox
    defaultval: |
      # CSV file should have columns with
      # upstream, downstream, lateral, below, above, type, options
    entryopt:
      width:    55
      height:   10
    outputdef:
      help:     "\nSampling inputs"
      farmsetup: sampling_csvtextbox

  - name:       sampling_csvfile
    frame:      frame_farmsampling
    label:      CSV file
    inputtype:  filename
    row:        0
    defaultval: ''
    entryopt:
      width:    25
    fileopenopt:
      kwargs:
        filetypes: 
          - ["CSV files", "*.csv"]
          - ["all files", "*.*"]
    outputdef:
      help:      CSV input file
      farmsetup: sampling_csvfile

  - name:       sampling_deleteprev
    frame:      frame_farmsampling2
    label:      Delete existing sampling probes
    inputtype:  bool
    defaultval: True
    outputdef:
      help:     "Remove all existing sampling probes before adding these"
      farmsetup: sampling_deleteprev

  # -------- Run wind farm sweep inputs --------------------
  - name:       sweep_windspeeds
    frame:      frame_runsweep1
    label:      Wind speeds
    inputtype:  str
    entryopt:
      width:    30
    outputdef:
      help:      "## List of wind speeds to sweep [m/s]"
      farmsetup: sweep_windspeeds

  - name:       sweep_winddirs
    frame:      frame_runsweep1
    label:      Wind directions
    inputtype:  str
    entryopt:
      width:    30
    outputdef:
      help:      List of wind directions to sweep [deg]
      farmsetup: sweep_winddirs

  - name:       sweep_inflowmode
    frame:      frame_runsweep2
    label:      Inflow mode
    inputtype:  str
    optionlist: ['uniform', 'RANS']
    defaultval: uniform
    outputdef:
      help:      Type of inflow velocity to wind farm
      farmsetup: sweep_inflowmode

  - name:       sweep_autosetBC
    frame:      frame_runsweep2
    label:      Automatically set BC's
    inputtype:  bool
    defaultval: true
    outputdef:
      help:      Automatically setup the boundary conditions for each wind direction
      farmsetup: sweep_autosetBC

  - name:       sweep_caseprefix
    frame:      frame_runsweep2
    label:      Case prefix
    inputtype:  str
    defaultval: Case_{CASENUM}
    entryopt:
      width:    30
    outputdef:
      help:      Case prefix (python format strings allowed)
      farmsetup: sweep_caseprefix

  - name:       sweep_usenewdirs
    frame:      frame_runsweep2
    label:      New dir for each case
    inputtype:  bool
    defaultval: true
    outputdef:
      help:      Create a new directory for each case
      farmsetup: sweep_usenewdirs
    ctrlelem:
      - input:  sweep_dirprefix
        activewhen: ['', 1]

  - name:       sweep_dirprefix
    frame:      frame_runsweep2
    label:      Directory prefix
    inputtype:  str
    defaultval: Case_{CASENUM}
    entryopt:
      width:    30
    outputdef:
      help:      Directory prefix (python format strings allowed)
      farmsetup: sweep_dirprefix

  - name:       sweep_createsubmitscript
    frame:      frame_runsweep2
    label:      Create submission script
    inputtype:  bool
    defaultval: False
    outputdef:
      help:      Create a submission script for each case
      farmsetup: sweep_createsubmitscript

  - name:       sweep_submitjob
    frame:      frame_runsweep2
    label:      Submit job
    inputtype:  bool
    defaultval: False
    outputdef:
      help:      Submit each job to the queue
      farmsetup: sweep_submitjob

  - name:       sweep_logfile
    frame:      frame_runsweep2
    label:      Logfile
    inputtype:  filename
    defaultval: ''
    entryopt:
      width:    30
    fileopenopt:             
      selecttype: saveas       # open/saveas/directory [optional]
    outputdef:
      help:      Log file to record each run
      farmsetup: sweep_logfile

  # -------- FLORIS inputs ---------------------------------
  - name:       floris_inputfile
    frame:      frame_floris
    label:      YAML file
    inputtype:  str #filename
    row:        1
    defaultval: 'floris.yaml'
    entryopt:
      width:    25
    fileopenopt:
      selecttype: saveas
      kwargs:
        filetypes:
          - ["YAML files", "*.yaml"]
          - ["all files", "*.*"]
    outputdef:
      help:     YAML file with FLORIS settings

  # -------- Hidden/extra inputs ---------------------------
  - name:       wfarm_embedamrwindinput
    frame:      frame_farmsampling1
    inputtype:  textbox
    visible:    False
    entryopt:
      width:    55
      height:   10
    defaultval: |
      # This should be the inputs to AMR-Wind
    outputdef:
      help:     "\n___Embedded AMR-Wind input____"
      farmsetup: wfarm_embedamrwindinput

buttons:
  - name:    farmbutton_loadturbines
    text:    Load/Reload
    frame:   frame_farmturbines
    row:     0
    col:     3
    command: "partial(self.button_loadcsv, 'turbines_csvfile', 'turbines_csvtextbox')"

  - name:    farmbutton_applyturbines
    text:    Create turbines
    frame:   frame_farmturbines3
    row:     1
    col:     0
    command: "self.turbines_createAllTurbines"

  - name:    farmbutton_previewturbines
    text:    Preview
    frame:   frame_farmturbines3
    row:     1
    col:     1
    command: "self.turbines_previewAllTurbines"


  - name:    farmbutton_loadrefine
    text:    Load/Reload
    frame:   frame_farmrefinement
    row:     0
    col:     3
    command: "partial(self.button_loadcsv, 'refine_csvfile', 'refine_csvtextbox')"

  - name:    farmbutton_applyrefine
    text:    Create refinements
    frame:   frame_farmrefinement3
    row:     1
    col:     0
    command: "self.refine_createAllZones"


  - name:    farmbutton_loadsampling
    text:    Load/Reload
    frame:   frame_farmsampling
    row:     0
    col:     3
    command: "partial(self.button_loadcsv, 'sampling_csvfile', 'sampling_csvtextbox')"

  - name:    farmbutton_applysampling
    text:    Create sampling probes
    frame:   frame_farmsampling3
    row:     1
    col:     0
    command: "self.sampling_createAllProbes"

  - name:    farmbutton_clearyamlfile
    row:     1
    col:     2
    text:    Clear filename
    frame:   frame_farmsetup
    command: "self.button_clearSetupYAMLfile"

  - name:    farmbutton_saveyaml
    row:     2
    col:     0
    text:    Save YAML
    frame:   frame_farmsetup2
    command: "self.button_saveFarmSetupYAML"

  - name:    farmbutton_loadyaml
    row:     2
    col:     1
    text:    Load YAML
    frame:   frame_farmsetup2
    command: "self.button_loadFarmSetupYAML"

  - name:    farmbutton_resetsetup
    row:     2
    col:     2
    text:    Reset inputs
    frame:   frame_farmsetup2
    command: "self.resetFarmSetup"

  - name:    farmbutton_setupsweep
    text:    Create cases
    frame:   frame_runsweep
    command: self.sweep_SetupRunParamSweep
    #command: self.donothing_button

  - name:    farmbutton_generatefloris
    text:    Generate
    frame:   frame_floris
    command: "self.floris_setup"

  # --- Help buttons ---
  - name:     helpbutton_farmturbinecsv
    text:     "[?]"
    frame:    frame_farmturbines1 header_frame
    help:     "Need help?"
    row:      0
    col:      2
    command:  "partial(self.showyamlmesg, 'frame_farmturbinecsv')"
    buttonoptions:
      pady:   0
      padx:   1
    gridoptions:
      sticky: 'NE'

  - name:     helpbutton_farmrefinecsv
    text:     "[?]"
    frame:    frame_farmrefinement1 header_frame
    help:     "Need help?"
    row:      0
    col:      2
    command:  "partial(self.showyamlmesg, 'frame_farmrefinecsv')"
    buttonoptions:
      pady:   0
      padx:   1
    gridoptions:
      sticky: 'NE'

  - name:     helpbutton_farmsamplingcsv
    text:     "[?]"
    frame:    frame_farmsampling1 header_frame
    help:     "Need help?"
    row:      0
    col:      2
    command:  "partial(self.showyamlmesg, 'frame_farmsamplingcsv')"
    buttonoptions:
      pady:   0
      padx:   1
    gridoptions:
      sticky: 'NE'

  - name:     helpbutton_farmsampling
    text:     "[?]"
    frame:    frame_farmsampling header_frame
    help:     "Need help?"
    row:      0
    col:      2
    command:  "partial(self.showyamlmesg, 'frame_farmsampling')"
    buttonoptions:
      pady:   0
      padx:   1
    gridoptions:
      sticky: 'NE'

# Add all help messages and buttons in here
helpwindows:
  frame_farmturbinecsv: 
    options:
      #autowidth: True
      height: 30
      title: Farm Turbine CSV input
    mesg: |
      ### TURBINE LAYOUT SPECIFICATIONS

      | column      | description                                                                       | required/optional |
      | ---         | ---                                                                               | ---               |
      | `name`      | The name of the turbine (can be arbitrary).                                       | required          |
      | `x`         | The x position of the turbine.                                                    | required          |
      | `y`         | The y position of the turbine.                                                    | required          |
      | `type`      | The turbine type (must be listed under turbine types tab)                         | required          |
      | `yaw`       | The turbine yaw heading.  If not specified, turbine points directly into the wind | optional          |
      | `hubheight` | The turbine hub-height.  If not specified, uses the default from the turbine type | optional          |
      | `options`   | Optional parameters                                                               | optional          |


  frame_farmrefinecsv: 
    options:
      #autowidth: True
      height: 30
      title: Farm refinement CSV input
    mesg: |
      ### REFINEMENT SPECIFICATIONS
      
      | column       | description                                                      | required/optional |
      | ---          | ---                                                              | ---               |
      | `level`      | The mesh level to apply the refinement.                          | required          |
      | `upstream`   | The number of diameters or meters upstream to apply refinement   | required          |
      | `downstream` | The number of diameters or meters downstream to apply refinement | required          |
      | `lateral`    | The number of diameters or meters off to side of each turbine    | required          |
      | `below`      | The number of diameters or meters below the turbine hub-height   | required          |
      | `above`      | The number of diameters or meters above the turbine hub-height   | required          |
      | `options`    | Any additional options (see below)                               | optional          |

      ### OPTIONAL INPUTS
      | keyword       | default    | possible values               | description                                          |
      | ---           | ---        | ---                           | ---                                                  |
      | `orientation` | `winddir`  | `winddir`, `nacdir`, `x`, `y` | Which direction the refinement box should be pointed |
      | `units`       | `diameter` | `diameter`, `meter`           | What units the values are in                         |
      | `center`      | `turbine`  | `turbine`, `farm`             | Where the center of the refinement zone is located   |

  frame_farmsamplingcsv: 
    options:
      #autowidth: True
      height: 30
      title: Farm sampling CSV input
    mesg: |
      ### SAMPLING SPECIFICATIONS
      | Type         | Description                                                                                                                                   | Required inputs                              |
      | ---          | ---                                                                                                                                           | ---                                          |
      | `centerline` | Creates a centerline probe from hub center, starting from upstream to downstream.                                                             | `upstream`, `downstream`                     |
      | `rotorplane` | Creates a rotor plane sampling problem start at upstream going to downstream from turbine.                                                    | `upstream`, `downstream`                     |
      | `hubheight`  | Creates a hub-height plane starting from upstream going to downstream, and with `lateral` width on either side.                               | `upstream`, `downstream`, `lateral`, `below` |
      | `streamwise` | Creates a streamwise plane from upstream to downstream location, starting at a position `below` the centerline to position `above` centerline | `upstream`, `downstream`, `below`, `above`   |

      ### Options
      
      | keyword       | default  | possible values       | description                                                       |
      | ---           | ---      | ---                   | ---                                                               |
      | `orientation` | winddir  | winddir, nacdir, x, y | Which direction the refinement box should be pointed              |
      | `units`       | diameter | diameter, meter       | What units the values are in                                      |
      | `center`      | turbine  | turbine, farm         | Where the center of the refinement zone is located                |
      | `usedx`       | None     | Any float value       | Use this spacing between probe points, disregarding `n1` and `n2` |
      | `noffsets`    | 0        | Any integerr value    | Create this number of offset planes                               |


  frame_farmsampling: 
    options:
      #autowidth: True
      height: 30
      title: Farm Sampling Setup
    mesg: |
      Sampling parameters
      -------------------
      
      # CSV file should have columns with
      # name, type, upstream, downstream, lateral, below, above, n1, n2, options

      Probe types:
        - centerline
        - rotorplane
        - hubheight
        - streamwise

      Options:
        - orientation:   winddir/nacdir/x/y [default:winddir]
        - units:         diameter/meter [default: diameter]
        - center:        turbine/farm [default: turbine]
        - usedx:         Use this mesh spacing [default: None]
        - noffsets:      Number of offsets [default: 0]
