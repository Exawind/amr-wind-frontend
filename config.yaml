tabs:
  - Simulation
  - Domain
  - ABL
  - Refinement
  - Turbines
  - IO
  - Postpro
  - Expert

frames:
  # ==== Simulation frames ==== 
  - name:  frame_simulation
    tab:   Simulation
    row:   1
    title: Simulation type
  - name:  frame_time
    tab:   Simulation
    row:   2
    title: Time control
  - name:  frame_restart
    tab:   Simulation
    row:   3
    title: Restart parameters
  - name:  frame_godunov
    tab:   Simulation
    row:   4
    title: Godunov parameters
  - name:  frame_incflo
    tab:   Simulation
    row:   5
    title: Fluid and transport properties
  - name:  frame_constants
    tab:   Simulation
    row:   6
    title: Constant values
  - name:  frame_turbulence
    tab:   Simulation
    row:   7
    title: Turbulence parameters
  - name:  frame_tolerances
    tab:   Expert
    title: Tolerances
  - name:  frame_numerics
    tab:   Expert
    title: Numerics

  # ==== Domain frames ==== 
  - name:  frame_Mesh
    tab:   Domain
    title: Domain and Mesh
  - name:  frame_BC
    tab:   Domain
    title: Periodic boundary conditions
  - name:  frame_xBC
    tab:   Domain
    title: Boundary conditions on X faces
    toggled: True
  - name:  frame_yBC
    tab:   Domain
    title: Boundary conditions on Y faces
    toggled: True
  - name:  frame_zBC
    tab:   Domain
    title: Boundary conditions on Z faces
    toggled: True

  # ==== ABL frames ==== 
  - name:  frame_ABLforcing
    tab:   ABL
    row:   1
    title: ABL forcing
  - name:  frame_ABLphysics
    tab:   ABL
    title: ABL physics
  - name:  frame_ABLprop
    tab:   ABL
    title: ABL properties
  - name:  frame_Coriolis
    tab:   ABL
    title: Coriolis forces
  - name:  frame_Boussinesq
    tab:   ABL
    title: Boussinesq forces
  - name:  frame_ABLTprof
    tab:   ABL
    title: ABL temperature profiles
  - name:  frame_ABLpeturb
    tab:   ABL
    title: ABL perturbations
  - name:  frame_ABLoutput
    tab:   ABL
    title: ABL output parameters
  - name:  frame_ABLboundaryplane
    tab:   ABL
    title: ABL Boundary Plane
    row:   10

  # ==== IO frames ==== 
  - name:  frame_IOplotting
    tab:   IO
    row:   1
    title: Plot Outputs
  - name:  frame_IOsampling
    tab:   IO
    row:   4
    title: Sampling probes

  # ==== Refinement frames ==== 
  - name:  frame_refinement
    tab:   Refinement
    row:   1
    title: Nested refinement parameters

  # ==== Postprocessing frames ==== 
  - name:  frame_postproABL
    tab:   Postpro
    row:   1
    title: ABL Postprocessing
  - name:  frame_postprosampling
    tab:   Postpro
    row:   2
    title: Plot Sample Planes

  # ==== Turbine frames ==== 
  - name:  frame_turbineglobals
    tab:   Turbines
    row:   1
    title: Turbine parameters
  - name:  frame_turbinefastlineglobals
    tab:   Turbines
    row:   3
    title: OpenFAST ALM global parameters
    toggled: True
  - name:  frame_turbinefastdiskglobals
    tab:   Turbines
    row:   4
    title: OpenFAST ADM global parameters
    toggled: True
  - name:  frame_uniformctglobals
    tab:   Turbines
    row:   5
    title: Uniform Ct Disk global parameters
    toggled: True
    
# ********** PREDEFEINED ANCHORS ****************
# Define things here which will be repeated later on
# This is using anchors (part of YAML definition)
# 
predefinedlists:
  # Check amr-wind/incflo_enums.H
  bctypes:      &PREDEFINED_BCTYPES [pressure_inflow, pressure_outflow, mass_inflow, zero_gradient,  no_slip_wall, slip_wall, wall_model, fixed_gradient]
  turbinetypes: &PREDEFINED_ACTUATORTYPES [TurbineFastLine, TurbineFastDisk, UniformCtDisk, FlatPlateLine]

  alwaysfalse:   &PREDEFINED_ALWAYSFALSE
    name:       default_alwaysfalse
    inputtype:  bool
    defaultval: False
    visible:    False

  explanation_xyz: &PREDEFINED_XYZHEADER
    label:      
    inputtype:  [str, str, str]
    defaultval: ['X','Y','Z']

  # ------- stuff used in turbine parameters ----
  actuatorselection: &PREDEFINED_ACTUATORSELECTION
    name:       Actuator_type
    label:      Actuator type
    inputtype:  str
    optionlist: *PREDEFINED_ACTUATORTYPES
    defaultval: 
    outputdef:
      AMR-Wind: type
    entryopt:
      width:    10
  openfast_input_file: &PREDEFINED_OPENFAST_INPUT_FILE
    name:       Actuator_openfast_input_file
    label:      OpenFAST fst file
    inputtype:  filename
    defaultval:
    outputdef:
      AMR-Wind: openfast_input_file
  rotordiameter: &PREDEFINED_ROTOR_DIAMETER
    name:       rotor_diameter
    label:      Rotor Diameter
    #frame:      frame_turbinefastlineglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: rotor_diameter
      help:     Rotor diameter [m]
  hub_height: &PREDEFINED_HUB_HEIGHT
    name:       hub_height
    label:      Hub height
    #frame:      frame_turbinefastlineglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: hub_height
  num_points_blade: &PREDEFINED_NUM_POINTS_BLADE
    name:       num_points_blade
    label:      Num blade points
    #frame:      frame_turbinefastlineglobals
    inputtype:  int
    defaultval: 
    outputdef:
      AMR-Wind: num_points_blade
  num_points_tower: &PREDEFINED_NUM_POINTS_TOWER
    name:       num_points_tower
    label:      Num tower points
    #frame:      frame_turbinefastlineglobals
    inputtype:  int
    defaultval: 
    outputdef:
      AMR-Wind: num_points_tower
  epsilon: &PREDEFINED_EPSILON
    name:       epsilon
    label:      Epsilon
    #frame:      frame_turbinefastlineglobals
    inputtype:  [float, float, float]
    defaultval: 
    outputdef:
      AMR-Wind: epsilon
      help:     The spreading function in (x,y,z)
  epsilon_tower: &PREDEFINED_EPSILON_TOWER
    name:       epsilon_tower
    label:      Epsilon tower
    #frame:      frame_turbinefastlineglobals
    inputtype:  [float, float, float]
    defaultval: 
    outputdef:
      AMR-Wind: epsilon_tower
  openfast_start_time: &PREDEFINED_OPENFAST_START_TIME
    name:       openfast_start_time
    label:      FAST start time
    #frame:      frame_turbinefastlineglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: openfast_start_time
  openfast_stop_time: &PREDEFINED_OPENFAST_STOP_TIME
    name:       openfast_stop_time
    label:      FAST stop time
    #frame:      frame_turbinefastlineglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: openfast_stop_time
  nacelle_drag_coeff: &PREDEFINED_NACELLE_DRAG_COEFF
    name:       nacelle_drag_coeff
    label:      Nacelle Cd
    #frame:      frame_turbinefastlineglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: nacelle_drag_coeff
  nacelle_area: &PREDEFINED_NACELLE_AREA
    name:       nacelle_area
    label:      Nacelle Area
    #frame:      frame_turbinefastlineglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: nacelle_area
  output_frequency: &PREDEFINED_OUTPUT_FREQUENCY
    name:       output_frequency
    label:      FAST output freq
    #frame:      frame_turbinefastlineglobals
    inputtype:  int
    defaultval: 
    outputdef:
      AMR-Wind: output_frequency
  density: &PREDEFINED_DENSITY
    name:       density
    label:      Density
    #frame:      frame_turbinefastlineglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: density
  yaw: &PREDEFINED_YAW
    name:       yaw
    label:      Nacelle yaw
    #frame:      frame_turbinefastlineglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: yaw


# *********** INPUTWIDGET FORMAT ****************
# 
#  Specify each input widget
#
# - name:       NAME         # Name of variable [required]
#   label:      SOME TEXT    # displayed label in GUI [optional]
#   tab:        TABNAME      # Which tab to put widget 
#   frame:      FRAMENAME    # Which frame to put widget
#                            #  either tab or frame must be specified
#   row:        ROWNUM       # which row to put widget [optional]
#   inputtype:  float        # Type of input [required]
#                            #  Types available: 
#                            #  float/int/bool/str/filename/listbox
#   defaultval: 100.0        # default value [optional]
#   visible:    True         # if false, make invisible [optional,default:True] 
#   optionlist: [var1, var2, ..] # user-selectable choices for listbox or str
#   fileopenopt:             # options for filename [optional]
#     selecttype: open       # open/saveas/directory [optional]
#     kwargs:                # Optional arguments to tkinter.filedialog
#       filetypes: 
#       - ["FAST out files", "*.out"]
#       - ["all files", "*.*"]
#   listboxopt:              # Options for listbox [optional]
#     selectmode: multiple
#     height:   2
#   outputdef:
#     AMR-Wind: time.stop_time
# ***********************************************

inputwidgets:
  # ========== Simulation inputs ==============================
  - name:       comment_simtimectrl
    frame:      frame_time
    inputtype:  str
    defaultval: "# --- Simulation time control parameters ---"
    visible:    False
    outputdef:
      AMR-Wind: '#comment_simtimectrl'

  - name:       stop_time
    label:      Max time
    frame:      frame_time
    inputtype:  float
    defaultval: 100.0
    outputdef:
      AMR-Wind: time.stop_time
      help:     Max (simulated) time to evolve [s]

  - name:       max_step
    label:      Max steps
    frame:      frame_time
    inputtype:  int
    defaultval: -1
    outputdef:
      AMR-Wind: time.max_step

  - name:       spacer
    frame:      frame_time
    labelonly:  True

  - name:       time_control
    label:      March with
    frame:      frame_time
    inputtype:  listbox
    optionlist: ['const dt', 'max cfl']
    defaultval: 'const dt'
    listboxopt:
      width:    12
      height:   2
    ctrlelem:
      - input:  fixed_dt
        activewhen: ['const dt', 1]
      - input:  cfl
        activewhen: ['max cfl', 1]

  - name:       fixed_dt
    label:      dt
    frame:      frame_time
    inputtype:  float
    defaultval: -1 #0.25
    outputdef:
      AMR-Wind: time.fixed_dt
      help:     Fixed timestep size (in seconds). If negative, then time.cfl is used

  - name:       cfl
    label:      Max CFL
    frame:      frame_time
    inputtype:  float
    defaultval: 0.50
    outputdef:
      AMR-Wind: time.cfl
      help:     Limit timesteps to maximum CFL 

  - name:       checkpoint_interval
    label:      Checkpoint interval
    frame:      frame_restart
    inputtype:  int
    defaultval: #10000
    outputdef:
      AMR-Wind: time.checkpoint_interval

  - name:       physics
    #label:      Simulation type
    #tab:        Simulation
    label:      Physics models
    frame:      frame_simulation
    row:        1
    inputtype:  listbox
    optionlist: [FreeStream, ABL, RayleighTaylor, BoussinesqBubble, TaylorGreenVortex, Actuator]
    #defaultval: ABL
    listboxopt:
      selectmode: multiple
    outputdef:
      AMR-Wind: incflo.physics
      help:     List of physics models to include in simulation.
  # ---------- Restart parameters -----------------------------
  - name:       verbose
    label:      Verbosity
    frame:      frame_IOplotting
    inputtype:  int
    defaultval: 0
    outputdef:
      AMR-Wind: incflo.verbose

  - name:       check_file
    label:      Check file
    frame:      frame_restart
    inputtype:  str
    defaultval: chk
    outputdef:
      AMR-Wind: io.check_file
      
  - name:       restart_file
    label:      Restart file
    frame:      frame_restart
    inputtype:  filename
    defaultval: 
    outputdef:
      AMR-Wind: io.restart_file
    entryopt:
      width:    20

  # ---------- Godunov parameters -----------------------------
  - name:       use_godunov
    label:      Use godunov
    frame:      frame_godunov
    inputtype:  bool
    defaultval: 1
    ctrlelem:
      - input:  godunov_type
    outputdef:
      AMR-Wind: incflo.use_godunov

  - name:       godunov_type
    label:      Godunov type
    frame:      frame_godunov
    inputtype:  str
    optionlist: [ppm, ppm_nolim, weno]
    defaultval: ppm
    outputdef:
      AMR-Wind: incflo.godunov_type

  # ---------- Turbulence parameters --------------------------
  - name:       turbulence_model
    label:      Turbulence model
    frame:      frame_turbulence
    inputtype:  listbox
    optionlist: [Laminar, OneEqKsgsM84, Smagorinsky]
    defaultval: 
    outputdef:
      AMR-Wind: turbulence.model
    ctrlelem:
      - input:  TKE_source_terms
        activewhen: ['OneEqKsgsM84', 1]
      - input:  SmagorinskyCs
        activewhen: ['Smagorinsky', 1]

  - name:       TKE_source_terms
    label:      TKE source terms
    frame:      frame_turbulence
    inputtype:  listbox
    optionlist: [KsgsM84Src]
    outputdef:
      AMR-Wind: TKE.source_terms

  - name:       SmagorinskyCs
    label:      Smagorinsky Cs
    frame:      frame_turbulence
    inputtype:  float
    defaultval: 0.135
    outputdef:
      AMR-Wind: Smagorinsky_coeffs.Cs
  # ---------- Tolerance parameters --------------------------
  - name:       nodal_proj.mg_rtol
    label:      nodal_proj.mg_rtol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: nodal_proj.mg_rtol

  - name:       nodal_proj.mg_atol
    label:      nodal_proj.mg_atol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: nodal_proj.mg_atol

  - name:       mac_proj.mg_rtol
    label:      mac_proj.mg_rtol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: mac_proj.mg_rtol

  - name:       mac_proj.mg_atol
    label:      mac_proj.mg_atol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: mac_proj.mg_atol

  - name:       diffusion.mg_rtol
    label:      diffusion.mg_rtol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: diffusion.mg_rtol

  - name:       diffusion.mg_atol
    label:      diffusion.mg_atol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: diffusion.mg_atol

  - name:       temperature_diffusion.mg_rtol
    label:      temperature_diffusion.mg_rtol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: temperature_diffusion.mg_rtol

  - name:       temperature_diffusion.mg_atol
    label:      temperature_diffusion.mg_atol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: temperature_diffusion.mg_atol

  # ---------- Numerics parameters --------------------------
  - name:       Do initial projections
    label:      incflo.do_initial_proj
    frame:      frame_numerics
    inputtype:  int
    outputdef:
      AMR-Wind: incflo.do_initial_proj

  - name:       Number of initial iterations
    label:      incflo.initial_iterations
    frame:      frame_numerics
    inputtype:  int
    outputdef:
      AMR-Wind: incflo.initial_iterations

  - name:       Nodal proj. verbosity
    label:      nodal_proj.verbose
    frame:      frame_numerics
    inputtype:  int
    outputdef:
      AMR-Wind: nodal_proj.verbose

  # ---------- incflo fluid properties ------------------------
  - name:       gravity
    label:      Gravity
    frame:      frame_incflo
    inputtype:  [float, float, float]
    defaultval: [0.0, 0.0, -9.81]
    outputdef:
      AMR-Wind: incflo.gravity
      help:     Gravitational acceleration vector (x,y,z) [m/s^2]

  - name:       density
    label:      Density
    frame:      frame_incflo
    inputtype:  float
    defaultval: 1.00
    outputdef:
      AMR-Wind: incflo.density
      help:     Fluid density [kg/m^3]

  - name:       viscosity
    label:      Dynamic viscosity
    frame:      frame_incflo
    inputtype:  float
    defaultval: 1.872e-5
    outputdef:
      AMR-Wind: transport.viscosity
      help:     Fluid dynamic viscosity [kg/m-s]

  - name:       laminar_prandtl
    label:      Laminar prandtl
    frame:      frame_incflo
    inputtype:  float
    defaultval: 0.7
    outputdef:
      AMR-Wind: transport.laminar_prandtl
      help:     Laminar prandtl number

  - name:       turbulent_prandtl
    label:      Turb. prandtl
    frame:      frame_incflo
    inputtype:  float
    defaultval: 0.3333
    outputdef:
      AMR-Wind: transport.turbulent_prandtl
      help:     Turbulent prandtl number

  # ---------- Constant values --------------------------------
  - name:       ConstValue_density
    label:      Constant density
    frame:      frame_constants
    inputtype:  float
    #defaultval: 0.3333
    outputdef:
      AMR-Wind: ConstValue.density.value

  - name:       ConstValue_velocity
    label:      Constant velocity
    frame:      frame_constants
    inputtype:  [float, float, float]
    #defaultval: 0.3333
    outputdef:
      AMR-Wind: ConstValue.velocity.value  

  # ========== Mesh and Domain inputs =========================
  - name:       comment_geommesh
    frame:      frame_Mesh
    inputtype:  str
    defaultval: "\n# --- Geometry and Mesh ---"
    visible:    False
    outputdef:
      AMR-Wind: '#comment_geommesh'

  - name:       explanation_domain
    frame:      frame_Mesh
    labelonly:  True
    label: |

      Note on the domain orientation: By convention, X and Y 
      are the horizontal directions, and Z is the vertical direction

  - name:       explanation_domainxyz
    label:      
    frame:      frame_Mesh
    inputtype:  [str, str, str]
    defaultval: ['X limits','Y limits','Z limits']

  - name:       prob_lo
    label:      "Domain corner 1"
    frame:      frame_Mesh
    inputtype:  [float, float, float] 
    defaultval: [0.0, 0.0, 0.0]
    outputdef:
      AMR-Wind: geometry.prob_lo

  - name:       prob_hi
    label:      "Domain corner 2"
    frame:      frame_Mesh
    inputtype:  [float, float, float] 
    defaultval: [1000.0, 1000.0, 1000.0]
    outputdef:
      AMR-Wind: geometry.prob_hi

  - name:       explanation_n_cell
    frame:      frame_Mesh
    labelonly:  True
    label: "\n"

  - name:       explanation_domainNxyz
    label:      
    frame:      frame_Mesh
    inputtype:  [str, str, str]
    defaultval: ['Nx','Ny','Nz']

  - name:       n_cell
    label:      "Mesh size"
    frame:      frame_Mesh
    inputtype:  [int, int, int] 
    defaultval: [48, 48, 48]
    outputdef:
      AMR-Wind: amr.n_cell
      help:     Number of cells in x, y, and z directions

  - name:       max_level
    label:      Max refinement level
    frame:      frame_refinement #frame_Mesh
    inputtype:  int
    defaultval: 0
    outputdef:
      AMR-Wind: amr.max_level

  - name:       is_periodicx
    label:      "Periodic in X"
    frame:      frame_BC
    inputtype:  bool
    defaultval: 1
    ctrlelem:
      - frame:      frame_xBC
        activewhen: ['', 0]

  - name:       is_periodicy
    label:      "Periodic in Y"
    frame:      frame_BC
    inputtype:  bool
    defaultval: 1
    ctrlelem:
      - frame:      frame_yBC
        activewhen: ['', 0]

  - name:       is_periodicz
    label:      "Periodic in Z"
    frame:      frame_BC
    inputtype:  bool
    defaultval: 0
    ctrlelem:
      - frame:      frame_zBC
        activewhen: ['', 0]

  - name:       isperiodic
    label:    
    frame:      frame_BC
    inputtype:  mergedboollist
    mergedboollist:
      - ['is_periodicx', '1', '0']
      - ['is_periodicy', '1', '0']      
      - ['is_periodicz', '1', '0']
    outputdef:
      AMR-Wind: geometry.is_periodic

  - name:       xlo_type
    label:      "xlo velocity BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: xlo.type

  - name:       xlo_temperature_type
    label:      "xlo temp BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    #defaultval: wall_model
    outputdef:
      AMR-Wind: xlo.temperature_type

  - name:       xlo_density
    label:      "xlo density"
    frame:      frame_xBC
    inputtype:  float
    outputdef:
      AMR-Wind: xlo.density

  - name:       xlo_velocity
    label:      "xlo face velocity (U,V,W)"
    frame:      frame_xBC
    inputtype:  [float, float, float]
    outputdef:
      AMR-Wind: xlo.velocity

  - name:       xlo_temperature
    label:      "xlo temperature"
    frame:      frame_xBC
    inputtype:  float
    outputdef:
      AMR-Wind: xlo.temperature

  - name:       xlo_tke_type
    label:      "xlo TKE BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: #None
    outputdef:
      AMR-Wind: xlo.tke_type

  - name:       xhi_type
    label:      "xhi velocity BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: xhi.type

  - name:       xhi_temperature_type
    label:      "xhi temp BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    #defaultval: fixed_gradient
    outputdef:
      AMR-Wind: xhi.temperature_type

  - name:       xhi_density
    label:      "xhi density"
    frame:      frame_xBC
    inputtype:  float
    outputdef:
      AMR-Wind: xhi.density

  - name:       xhi_velocity
    label:      "xhi face velocity (U,V,W)"
    frame:      frame_xBC
    inputtype:  [float, float, float]
    outputdef:
      AMR-Wind: xhi.velocity

  - name:       xhi_temperature
    label:      "xhi temperature"
    frame:      frame_xBC
    inputtype:  float
    outputdef:
      AMR-Wind: xhi.temperature

  - name:       xhi_tke_type
    label:      "xhi TKE BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: #None
    outputdef:
      AMR-Wind: xhi.tke_type

  - name:       ylo_type
    label:      "ylo velocity BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: ylo.type

  - name:       ylo_temperature_type
    label:      "ylo temp BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: wall_model
    outputdef:
      AMR-Wind: ylo.temperature_type

  - name:       ylo_density
    label:      "ylo density"
    frame:      frame_yBC
    inputtype:  float
    outputdef:
      AMR-Wind: ylo.density

  - name:       ylo_velocity
    label:      "ylo face velocity (U,V,W)"
    frame:      frame_yBC
    inputtype:  [float, float, float]
    outputdef:
      AMR-Wind: ylo.velocity

  - name:       ylo_temperature
    label:      "ylo temperature"
    frame:      frame_yBC
    inputtype:  float
    outputdef:
      AMR-Wind: ylo.temperature

  - name:       ylo_tke_type
    label:      "ylo TKE BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: #None
    outputdef:
      AMR-Wind: ylo.tke_type

  - name:       yhi_type
    label:      "yhi velocity BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: yhi.type

  - name:       yhi_temperature_type
    label:      "yhi temp BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: fixed_gradient
    outputdef:
      AMR-Wind: yhi.temperature_type

  - name:       yhi_density
    label:      "yhi density"
    frame:      frame_yBC
    inputtype:  float
    outputdef:
      AMR-Wind: yhi.density

  - name:       yhi_velocity
    label:      "yhi face velocity (U,V,W)"
    frame:      frame_yBC
    inputtype:  [float, float, float]
    outputdef:
      AMR-Wind: yhi.velocity

  - name:       yhi_temperature
    label:      "yhi temperature"
    frame:      frame_yBC
    inputtype:  float
    outputdef:
      AMR-Wind: yhi.temperature

  - name:       yhi_tke_type
    label:      "yhi TKE BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: #None
    outputdef:
      AMR-Wind: yhi.tke_type

  - name:       zlo_type
    label:      "zlo velocity BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: zlo.type

  - name:       zlo_temperature_type
    label:      "zlo temp BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: #wall_model
    outputdef:
      AMR-Wind: zlo.temperature_type

  - name:       zlo_density
    label:      "zlo density"
    frame:      frame_zBC
    inputtype:  float
    outputdef:
      AMR-Wind: zlo.density

  - name:       zlo_velocity
    label:      "zlo face velocity (U,V,W)"
    frame:      frame_zBC
    inputtype:  [float, float, float]
    outputdef:
      AMR-Wind: zlo.velocity

  - name:       zlo_temperature
    label:      "zlo temperature"
    frame:      frame_zBC
    inputtype:  float
    outputdef:
      AMR-Wind: zlo.temperature

  - name:       zlo_tke_type
    label:      "zlo TKE BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: #slip_wall
    outputdef:
      AMR-Wind: zlo.tke_type

  - name:       zhi_type
    label:      "zhi velocity BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: zhi.type

  - name:       zhi_temperature_type
    label:      "zhi temp BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: #fixed_gradient
    outputdef:
      AMR-Wind: zhi.temperature_type

  - name:       zhi_density
    label:      "zhi density"
    frame:      frame_zBC
    inputtype:  float
    outputdef:
      AMR-Wind: zhi.density

  - name:       zhi_velocity
    label:      "zhi face velocity (U,V,W)"
    frame:      frame_zBC
    inputtype:  [float, float, float]
    outputdef:
      AMR-Wind: zhi.velocity

  - name:       zhi_temperature
    label:      "zhi temperature"
    frame:      frame_zBC
    inputtype:  float
    outputdef:
      AMR-Wind: zhi.temperature

  - name:       zhi_tke_type
    label:      "zhi TKE BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *PREDEFINED_BCTYPES
    defaultval: #slip_wall
    outputdef:
      AMR-Wind: zhi.tke_type

  # ============================================================
  # ========== ABL forcing selection ==========================
  - name:       comment_ablparams
    frame:      frame_ABLforcing
    inputtype:  str
    defaultval: "\n# --- ABL parameters ---"
    visible:    False
    outputdef:
      AMR-Wind: '#comment_ablparams'

  - name:       ABLForcing
    label:      add ABL Forcing
    frame:      frame_ABLforcing
    inputtype:  bool
    defaultval: 0
    ctrlelem:  
#      - frame:   frame_ABLphysics
      - frame:   frame_ABLprop
      - frame:   frame_ABLTprof        
      - frame:   frame_ABLpeturb
      - frame:   frame_ABLoutput
  - name:       CoriolisForcing
    label:      add Coriolis forces
    frame:      frame_ABLforcing
    inputtype:  bool
    defaultval: 0
    ctrlelem:  
      - frame:  frame_Coriolis

  - name:       BoussinesqForcing
    label:      add Boussinesq forcing
    frame:      frame_ABLforcing
    inputtype:  bool
    defaultval: 0
    ctrlelem:  
      - frame:  frame_Boussinesq

  - name:       ICNS_source_terms
    label:    
    frame:      frame_ABLforcing
    inputtype:  mergedboollist
    mergedboollist:
      - ['ABLForcing',        'ABLForcing',          '']
      - ['BoussinesqForcing', 'BoussinesqBuoyancy',  '']    
      - ['CoriolisForcing',   'CoriolisForcing',     '']
      - ['ActuatorForcing',   'ActuatorForcing',     '']
    outputdef:
      AMR-Wind: ICNS.source_terms

  # ========== ABL output parameters ==========================
  - name:       ABL_stats_output_frequency
    label:      Output frequency
    frame:      frame_ABLoutput
    inputtype:  int
    defaultval: 2
    outputdef:
      AMR-Wind: ABL.stats_output_frequency

  - name:       ABL_stats_output_format
    label:      Output format
    frame:      frame_ABLoutput
    inputtype:  str
    optionlist: [netcdf]
    defaultval: netcdf
    outputdef:
      AMR-Wind: ABL.stats_output_format

  # ========== ABL output parameters ==========================
  - name:       ABL_useboundaryplane
    label:      Use boundary plane I/O
    tab:        ABL
    row:        9
    inputtype:  bool
    ctrlelem:
      - frame:      frame_ABLboundaryplane
        activewhen: ['', 1]

  - name:       ABL_bndry_io_mode
    label:      Boundary plane IO mode
    frame:      frame_ABLboundaryplane
    inputtype:  str
    optionlist: [0, 1]
    defaultval: -1
    outputdef:
      AMR-Wind: ABL.bndry_io_mode

  - name:       ABL_bndry_file
    label:      Boundary file
    frame:      frame_ABLboundaryplane
    inputtype:  filename
    outputdef:
      AMR-Wind: ABL.bndry_file

  - name:       ABL_bndry_planes
    label:      Boundary planes
    frame:      frame_ABLboundaryplane
    inputtype:  listbox
    optionlist: [xlo, ylo]
    listboxopt:
      selectmode: multiple
      height:   2
    outputdef:
     AMR-Wind:  ABL.bndry_planes

  - name:       ABL_bndry_output_start_time
    label:      Output start time
    frame:      frame_ABLboundaryplane
    inputtype:  float
    outputdef:
     AMR-Wind:  ABL.bndry_output_start_time

  - name:       ABL_bndry_var_names
    label:      Output variables
    frame:      frame_ABLboundaryplane
    inputtype:  str
    defaultval: velocity temperature
    outputdef:
     AMR-Wind:  ABL.bndry_var_names

  # ========== ABL specification ==============================
  - name:       ABL_velocity
    label:      Wind vector
    frame:      frame_ABLphysics
    inputtype:  [float, float, float] 
    defaultval: [10.0, 0.0, 0.0]
    outputdef:
      AMR-Wind: incflo.velocity

  - name:       useWSDir
    label:      Use speed & dir instead
    frame:      frame_ABLphysics
    inputtype:  bool
    defaultval: 0
    ctrlelem:
      - input:  ABL_windspeed
      - input:  ABL_winddir
      - input:  ABL_velocity
        activewhen: ['', 0]

  - name:       ABL_windspeed
    label:      Wind speed
    frame:      frame_ABLphysics
    inputtype:  float    

  - name:       ABL_winddir
    label:      Wind direction
    frame:      frame_ABLphysics
    inputtype:  float

  - name:       forcing_height
    label:      Forcing height
    frame:      frame_ABLphysics
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: ABLForcing.abl_forcing_height

  - name:       kappa
    label:      kappa
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 0.41
    outputdef:
      AMR-Wind: ABL.kappa

  - name:       ABL_normal_direction
    label:      ABL normal direction
    frame:      frame_ABLprop
    inputtype:  int
    defaultval: 2
    outputdef:
      AMR-Wind: ABL.normal_direction

  - name:       z0
    label:      z0 roughness
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 0.0005
    outputdef:
      AMR-Wind: ABL.surface_roughness_z0

  - name:       reference_temperature
    label:      ABL ref temp
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 300.0
    outputdef:
      AMR-Wind: ABL.reference_temperature

  - name:       surface_temp_rate
    label:      surf temp rate 
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: ABL.surface_temp_rate

  - name:       surface_temp_flux
    label:      surf temp flux
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: ABL.surface_temp_flux
      help:     Surface temperature flux [K-m/s]

  - name:       mo_beta_m
    label:      M.O. beta_m
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: ABL.mo_beta_m 
      help:     Monin-Obukhov Beta m parameter

  - name:       mo_gamma_m
    label:      M.O. gamma_m
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: ABL.mo_gamma_m 
      help:     Monin-Obukhov Gamma m parameter

  - name:       mo_gamma_h
    label:      M.O. gamma_h
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: ABL.mo_gamma_h
      help:     Monin-Obukhov Gamma h parameter

  - name:       latitude
    label:      Latitude
    frame:      frame_Coriolis
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: CoriolisForcing.latitude

  - name:       rotational_time_period
    label:      Rotation period
    frame:      frame_Coriolis
    inputtype:  float
    defaultval: 86164.0900027328
    outputdef:
      AMR-Wind: CoriolisForcing.rotational_time_period

  - name:       north_vector
    label:      North direction
    frame:      frame_Coriolis
    inputtype:  [float, float, float] 
    defaultval: [0.0, 1.0, 0.0]
    outputdef:
      AMR-Wind: CoriolisForcing.north_vector

  - name:       east_vector
    label:      East direction
    frame:      frame_Coriolis
    inputtype:  [float, float, float] 
    defaultval: [1.0, 0.0, 0.0]
    outputdef:
      AMR-Wind: CoriolisForcing.east_vector

  - name:       boussinesq_reference_temperature
    label:      Reference Temperature
    frame:      frame_Boussinesq
    inputtype:  float
    defaultval: 300.0
    outputdef:
      AMR-Wind: BoussinesqBuoyancy.reference_temperature 

  - name:       temperature_heights
    label:      Temp profile z
    frame:      frame_ABLTprof
    inputtype:  str
    #defaultval: 0.0 650.0 750.0 1000.0
    outputdef:
      AMR-Wind: ABL.temperature_heights

  - name:       temperature_values
    label:      Temp profile val
    frame:      frame_ABLTprof
    inputtype:  str
    #defaultval: 300.0 300.0 308.0 308.75 
    outputdef:
      AMR-Wind: ABL.temperature_values

  - name:       perturb_velocity
    label:      Apply vel perturbations
    frame:      frame_ABLpeturb
    inputtype:  bool
    defaultval: 0
    outputdef:
      AMR-Wind: ABL.perturb_velocity
    ctrlelem:
      - input:  perturb_ref_height
      - input:  Uperiods
      - input:  Vperiods
      - input:  deltaU
      - input:  deltaV

  - name:       perturb_ref_height
    label:      Ref z for vel perturb
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 50.0
    outputdef:
      AMR-Wind: ABL.perturb_ref_height

  - name:       Uperiods
    label:      Num of periods in x
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 4.0
    outputdef:
      AMR-Wind: ABL.Uperiods

  - name:       Vperiods
    label:      Num of periods in y
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 4.0
    outputdef:
      AMR-Wind: ABL.Vperiods

  - name:       deltaU
    label:      Amp. of U fluct.
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 1.0
    outputdef:
      AMR-Wind: ABL.deltaU

  - name:       deltaV
    label:      Amp. of V fluct.
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 1.0
    outputdef:
      AMR-Wind: ABL.deltaV

  - name:       perturb_temperature
    label:      Apply T perturbations
    frame:      frame_ABLpeturb
    inputtype:  bool
    defaultval: 0
    outputdef:
      AMR-Wind: ABL.perturb_temperature
    ctrlelem:
      - input:  theta_amplitude
      - input:  cutoff_height

  - name:       theta_amplitude
    label:      Amp. of T fluct.
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 0.8
    outputdef:
      AMR-Wind: ABL.theta_amplitude

  - name:       cutoff_height
    label:      Max T perturb height
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 100.0
    outputdef:
      AMR-Wind: ABL.cutoff_height

  # =========== Sampling stuff here ====================
  - name:       plot_label
    label:      Plotting and output parameters
    tab:        IO
    row:        0
    labelonly:  True

  - name:       plot_interval
    label:      Plot interval
    frame:      frame_IOplotting
    inputtype:  int
    defaultval: 1000
    outputdef:
      AMR-Wind: time.plot_interval

  - name:       plot_file
    label:      Plot file
    frame:      frame_IOplotting
    inputtype:  str
    defaultval: plt
    outputdef:
      AMR-Wind: io.plot_file

  - name:       io_outputs
    label:      Output variables
    frame:      frame_IOplotting
    inputtype:  str
    outputdef:
      AMR-Wind: io.outputs

  - name:       KE_int
    label:      Output KE interval
    frame:      frame_IOplotting
    inputtype:  int
    defaultval: -1
    outputdef:
      AMR-Wind: io.KE_int

  - name:       post_processing
    label:      Post processing
    tab:        IO
    row:        3
    inputtype:  listbox
    optionlist: [sampling]
#    defaultval: sampling
    listboxopt:
      selectmode: multiple
    outputdef:
      AMR-Wind: incflo.post_processing
    ctrlelem:
      - frame:  frame_IOsampling
        activewhen: ['sampling', 1]

  - name:       comment_sampling
    frame:      frame_IOsampling
    inputtype:  str
    defaultval: "\n# --- Sampling parameters ---"
    visible:    False
    outputdef:
      AMR-Wind: '#comment_sampling'

  - name:       sampling_output_frequency
    label:      Output freq
    frame:      frame_IOsampling
    inputtype:  int
    defaultval: 100
    outputdef:
      AMR-Wind: sampling.output_frequency

  - name:       sampling_fields
    label:      Variables
    frame:      frame_IOsampling
    inputtype:  listbox
    optionlist: [velocity, temperature, actuator_src_term]
    defaultval: velocity
    listboxopt:
      selectmode: multiple
    outputdef:
      AMR-Wind: sampling.fields

  # =========== Postprocessing stuff here ====================
  # ----------- ABL postprocessing -----------------
  - name:       ablstats_file
    label:      ABL Statistics file
    frame:      frame_postproABL
    row:        1
    inputtype:  filename
    entryopt:
      width:    20
    fileopenopt:
      kwargs:
        filetypes: 
          - ["NETCDF files", "*.nc"]
          - ["all files", "*.*"]
  - name:       ablstats_avgt
    label:      Avg times
    frame:      frame_postproABL
    row:        4
    inputtype:  [float, float]
    defaultval: [0.0, 0.0]

  - name:       ablstats_avgz
    label:      Avg heights
    frame:      frame_postproABL
    inputtype:  str
    defaultval: 

  - name:       ablstats_profileplot
    label:      ABL Profile Stats
    frame:      frame_postproABL
    inputtype:  listbox
    optionlist: "self.parent.ABLpostpro_getprofileslist()"
    listboxopt:
      selectmode: multiple
      height:     5

  - name:       ablstats_scalarplot
    label:      ABL Scalar Stats
    frame:      frame_postproABL
    inputtype:  listbox
    optionlist: "self.parent.ABLpostpro_getscalarslist()"
    row:        8
    listboxopt:
      selectmode: multiple
      height:     5

  - name:       ablstats_reportlabel
    label:      Print ABL report
    frame:      frame_postproABL
    row:        10
    labelonly:  True

  # ----------- Sample probe postprocessing -----------------
  - name:       AlwaysFalse
    frame:      frame_postprosampling
    inputtype:  bool
    defaultval: False
    visible:    False
    ctrlelem:
      - input:  samplingprobe_timeinfolabel
        activewhen: ['', 1]
      - input:  samplingprobe_timeinfo
        activewhen: ['', 1]
      - input:  explanation_domainxyz
        activewhen: ['', 1]
      - input:  explanation_domainNxyz
        activewhen: ['', 1]

  - name:       sampling_file
    label:      NetCDF file
    frame:      frame_postprosampling
    row:        1
    inputtype:  filename
    entryopt:
      width:    20
    fileopenopt:
      kwargs:
        filetypes: 
          - ["NETCDF files", "*.nc"]
          - ["all files", "*.*"]

  - name:       samplingprobe_info_label
    label:      Available Data
    frame:      frame_postprosampling
    row:        3
    labelonly:  True

  - name:       samplingprobe_groups
    label:      NetCDF groups
    frame:      frame_postprosampling
    inputtype:  listbox
    optionlist: "parent.Samplepostpro_getgroups()"
    listboxopt:
      height:   4
      selectmode: multiple

  - name:       samplingprobe_variables
    label:      NetCDF vars
    frame:      frame_postprosampling
    row:        6
    inputtype:  listbox
    optionlist: "parent.Samplepostpro_getvars()"
    listboxopt:
      height:   4
      selectmode: multiple

  - name:       samplingprobe_plotaxis1
    label:      Plot axis 1
    frame:      frame_postprosampling
    inputtype:  str
    optionlist: [X, Y, Z, AUTO]
    defaultval: AUTO

  - name:       samplingprobe_plotaxis2
    label:      Plot axis 2
    frame:      frame_postprosampling
    inputtype:  str
    optionlist: [X, Y, Z, AUTO]
    defaultval: AUTO

  - name:       samplingprobe_kindex
    frame:      frame_postprosampling
    label:      k-plane
    inputtype:  int
    defaultval: 0

  - name:       samplingprobe_timeinfolabel
    label:      Times
    frame:      frame_postprosampling
    inputtype:  [str, str, str]
    defaultval: ['Start','Current','End']

  - name:       samplingprobe_timeinfo
    label:      Iter:Time
    frame:      frame_postprosampling
    inputtype:  [str, str, str]
    defaultval: 

  - name:       samplingprobe_setcurrtimelabel
    frame:      frame_postprosampling
    label:      Set current time
    labelonly:  True

  - name:       samplingprobe_plottimeindex
    frame:      frame_postprosampling
    inputtype:  int
    defaultval: 0

  # =========== Turbine stuff here ====================
  - name:       ActuatorForcing
    label:      Add turbines to simulation
    tab:        Turbines
    row:        0
    inputtype:  bool
    defaultval: 0
    ctrlelem:  
      - frame:  frame_turbineglobals
      - input:  Actuator_default_type

  - name:       label_add_newturbinetype
    label:      "\nAvailable turbine models"
    frame:      frame_turbineglobals
    row:        1
    labelonly:  True

  - name:       label_add_newturbines
    label:      "\nAdd turbines here"
    frame:      frame_turbineglobals
    row:        5
    labelonly:  True

  - name:       Actuator_default_type
    label:      Default actuator type
    tab:        Turbines
    row:        2
    #frame:      frame_turbineglobals
    inputtype:  listbox
    optionlist: *PREDEFINED_ACTUATORTYPES
    outputdef:
      AMR-Wind: Actuator.type
    ctrlelem:
      - frame:  frame_turbinefastlineglobals
        activewhen: ['TurbineFastLine', 1]
      - frame:  frame_turbinefastdiskglobals
        activewhen: ['TurbineFastDisk', 1]          

  # ------ TurbineFastLine Globals -------------------
  - <<: *PREDEFINED_ROTOR_DIAMETER
    name:       Actuator_TurbineFastLine_rotor_diameter
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.rotor_diameter
  - <<: *PREDEFINED_HUB_HEIGHT
    name:       Actuator_TurbineFastLine_hub_height
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.hub_height
  - <<: *PREDEFINED_NUM_POINTS_BLADE
    name:       Actuator_TurbineFastLine_num_points_blade
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.num_points_blade
  - <<: *PREDEFINED_NUM_POINTS_TOWER
    name:       Actuator_TurbineFastLine_num_points_tower
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.num_points_tower
  - <<: *PREDEFINED_EPSILON
    name:       Actuator_TurbineFastLine_epsilon
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.epsilon
  - <<: *PREDEFINED_EPSILON_TOWER 
    name:       Actuator_TurbineFastLine_epsilon_tower
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.epsilon_tower
  - <<: *PREDEFINED_OPENFAST_START_TIME
    name:       Actuator_TurbineFastLine_openfast_start_time
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.openfast_start_time
  - <<: *PREDEFINED_OPENFAST_STOP_TIME
    name:       Actuator_TurbineFastLine_openfast_stop_time
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.openfast_stop_time
  - <<: *PREDEFINED_NACELLE_DRAG_COEFF
    name:       Actuator_TurbineFastLine_nacelle_drag_coeff
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.nacelle_drag_coeff
  - <<: *PREDEFINED_NACELLE_AREA
    name:       Actuator_TurbineFastLine_nacelle_area
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.nacelle_area
  - <<: *PREDEFINED_OUTPUT_FREQUENCY
    name:       Actuator_TurbineFastLine_output_frequency
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.output_frequency
  - <<: *PREDEFINED_DENSITY
    name:       Actuator_TurbineFastLine_density
    frame:      frame_turbinefastlineglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastLine.density

  # ------ TurbineFastDisk Globals -------------------
  - <<: *PREDEFINED_ROTOR_DIAMETER
    name:       Actuator_TurbineFastDisk_rotor_diameter
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.rotor_diameter
  - <<: *PREDEFINED_HUB_HEIGHT
    name:       Actuator_TurbineFastDisk_hub_height
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.hub_height
  - <<: *PREDEFINED_NUM_POINTS_BLADE
    name:       Actuator_TurbineFastDisk_num_points_blade
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.num_points_blade
  - <<: *PREDEFINED_NUM_POINTS_TOWER
    name:       Actuator_TurbineFastDisk_num_points_tower
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.num_points_tower
  - <<: *PREDEFINED_EPSILON
    name:       Actuator_TurbineFastDisk_epsilon
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.epsilon
  - <<: *PREDEFINED_EPSILON_TOWER
    name:       Actuator_TurbineFastDisk_epsilon_tower
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.epsilon_tower
  - <<: *PREDEFINED_OPENFAST_START_TIME
    name:       Actuator_TurbineFastDisk_openfast_start_time
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.openfast_start_time
  - <<: *PREDEFINED_OPENFAST_STOP_TIME
    name:       Actuator_TurbineFastDisk_openfast_stop_time
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.openfast_stop_time
  - <<: *PREDEFINED_NACELLE_DRAG_COEFF
    name:       Actuator_TurbineFastDisk_nacelle_drag_coeff
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.nacelle_drag_coeff
  - <<: *PREDEFINED_NACELLE_AREA
    name:       Actuator_TurbineFastDisk_nacelle_area
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.nacelle_area
  - <<: *PREDEFINED_OUTPUT_FREQUENCY
    name:       Actuator_TurbineFastDisk_output_frequency
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.output_frequency
  - <<: *PREDEFINED_DENSITY
    name:       Actuator_TurbineFastDisk_density
    frame:      frame_turbinefastdiskglobals
    outputdef:
      AMR-Wind: Actuator.TurbineFastDisk.density

  # ------ Uniform Ct Globals -------------------
  - <<: *PREDEFINED_ROTOR_DIAMETER
    name:       Actuator_UniformCtDisk_rotor_diameter
    frame:      frame_uniformctglobals
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.rotor_diameter
  - name:       Actuator_UniformCtDisk_base_position
    label:      Base position (x,y,z)
    inputtype:  [float, float, float]
    defaultval: 
    frame:    frame_uniformctglobals
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.base_position
      help:     Where the bottom of the tower sits
  - <<: *PREDEFINED_HUB_HEIGHT
    name:       Actuator_UniformCtDisk_hub_height
    frame:      frame_uniformctglobals
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.hub_height
  - <<: *PREDEFINED_EPSILON
    name:       Actuator_UniformCtDisk_epsilon
    frame:      frame_uniformctglobals
    #inputtype:  float
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.epsilon
    entryopt:
      varlenlist:  True
  - <<: *PREDEFINED_OUTPUT_FREQUENCY
    name:       Actuator_UniformCtDisk_output_frequency
    label:      Output frequency
    frame:      frame_uniformctglobals
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.output_frequency
  - <<: *PREDEFINED_DENSITY
    name:       Actuator_UniformCtDisk_density
    frame:      frame_uniformctglobals
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.density
  - <<: *PREDEFINED_YAW
    name:       Actuator_UniformCtDisk_yaw
    frame:      frame_uniformctglobals
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.yaw
  - name:       Actuator_UniformCtDisk_sample_yaw
    label:      Sample yaw
    frame:      frame_uniformctglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.sample_yaw
      help:     Turbine sampling yaw direction [deg]
  - name:       Actuator_UniformCtDisk_diameters_to_sample
    label:      Sample distance
    frame:      frame_uniformctglobals
    inputtype:  float
    defaultval: 
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.diameters_to_sample
      help:     Number of rotor diameters to sample upstream for velocity
  - name:       Actuator_UniformCtDisk_num_force_points
    label:      Num force points
    frame:      frame_uniformctglobals
    inputtype:  int
    defaultval: 
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.num_force_points
      help:     Number of radial force points to apply disk loading
  - name:       Actuator_UniformCtDisk_num_vel_points_r
    label:      Num vel r pts sample
    frame:      frame_uniformctglobals
    inputtype:  int
    defaultval: 
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.num_vel_points_r
      help:     Number of radial force points to sample for velocity
  - name:       Actuator_UniformCtDisk_num_vel_points_t
    label:      Num vel theta pts sample
    frame:      frame_uniformctglobals
    inputtype:  int
    defaultval: 
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.num_vel_points_t
      help:     Number of theta force points to sample for velocity
  - name:       Actuator_UniformCtDisk_num_vel_points_t
    label:      Num vel theta pts sample
    frame:      frame_uniformctglobals
    inputtype:  int
    defaultval: 
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.num_vel_points_t
      help:     Number of theta force points to sample for velocity
  - name:       Actuator_UniformCtDisk_thrust_coeff
    label:      Thrust coefficient
    frame:      frame_uniformctglobals
    inputtype:  str
    defaultval: 
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.thrust_coeff
      help:     Constant thrust coefficient
  - name:       Actuator_UniformCtDisk_wind_speed
    label:      Wind speed table
    frame:      frame_uniformctglobals
    inputtype:  str
    defaultval: 
    outputdef:
      AMR-Wind: Actuator.UniformCtDisk.wind_speed
      help:     Wind speed table

  # =========== Local preferences here =================
  # ------------ Submission script template -------------
  - name:       submitscript_template
    label:      Submit script template
    tab:        Expert
    visible:    False
    inputtype:  str
    # See https://learnxinyminutes.com/docs/yaml/ for YAML tricks
    # This is a default LSF scipt from summit
    defaultval: |
      #!/bin/bash
      # Begin LSF Directives
      #BSUB -W submitscript_runtime
      #BSUB -n submitscript_numnodes
      #BSUB -J submitscript_jobname
      #BSUB -o %J.out
      #BSUB -e %J.err

      submitscript_modules 

      mpirun -np submitscript_numnodes submitscript_exe submitscript_inputfile

  - name:       preferences_turbinedir
    label:      Turbine template directory
    tab:        Expert
    visible:    False
    inputtype:  str
    defaultval: turbines


  # # =========== Junk stuff here ========================
  # - name: input_3
  #   label: "list of options"
  #   tab:  Junk
  #   inputtype: str
  #   optionlist: ['optionA', 'optionB']
  #   defaultval: 'optionA'

  # - name: label1
  #   label: "This is some label"
  #   labelonly: True
  #   tab:  Junk

  # - name: label2
  #   label: "Some more helpful advice"
  #   labelonly: True
  #   tab:  Junk

buttons:
  - name:    calculateWindVector
    text:    Calc W. Vec
    frame:   frame_ABLphysics
    row:     6
    col:     1
    command: self.ABL_calculateWindVector

  - name:    calculateWindSpeedDir
    text:    Calc WS/WDir
    frame:   frame_ABLphysics
    row:     6
    col:     2
    command: self.ABL_calculateWDirWS

  - name: writeInput
    text: dump input file
    tab:  Expert
    command: self.dumpAMRWindInputGUI
      #"partial(self.writeAMRWindInput, '', verbose=True)"

  - name:    loadABLstatsfile
    text:    Load file
    frame:   frame_postproABL
    row:     1
    col:     3
    command: "self.ABLpostpro_loadnetcdffile"

  - name:    plotABLstatsprofile
    text:    Plot profiles
    frame:   frame_postproABL
    row:     7
    col:     1
    command: "self.ABLpostpro_plotprofiles"

  - name:    plotABLexportprofile
    text:    Export profiles
    frame:   frame_postproABL
    row:     7
    col:     2
    command: "self.ABLpostpro_exportprofiles"

  - name:    plotABLscalars
    text:    Plot scalars
    frame:   frame_postproABL
    row:     9
    col:     1
    command: "self.ABLpostpro_plotscalars"

  - name:    printABLstatsreport
    text:    Print report
    frame:   frame_postproABL
    row:     10
    col:     1
    command: "self.ABLpostpro_printreport"

  - name:    loadSamplefile
    text:    Load file
    frame:   frame_postprosampling
    row:     1
    col:     3
    command: "self.Samplepostpro_loadnetcdffile"

  - name:    loadSamplevars
    text:    Load variables
    frame:   frame_postprosampling
    row:     5
    col:     1
    command: "self.Samplepostpro_getvars"

  - name:    Sampleprobe_prevtime
    text:    "<Prev"
    frame:   frame_postprosampling
    row:     13
    col:     0
    command: "self.Samplepostpro_getprevtime"

  - name:    Sampleprobe_nexttime
    text:    "Next>"
    frame:   frame_postprosampling
    row:     13
    col:     2
    command: "self.Samplepostpro_getnexttime"

  - name:    plotSampleprobe
    text:    Plot Sample
    frame:   frame_postprosampling
    command: "self.Samplepostpro_getplot"

  # --- Help buttons ---
  - name:     helpbutton_domain
    text:     "[?]"
    frame:    frame_Mesh
    help:     "Need help?"
    row:      0
    col:      3
    command:  "partial(self.showyamlmesg, 'domain')"
    buttonoptions:
      pady:   0
      padx:   1
    gridoptions:
      sticky: 'NE'
  - name:     helpbutton_xBC
    text:     "[?]"
    frame:    frame_xBC header_frame 
    help:     "Need help?"
    row:      0
    col:      3
    command:  "partial(self.showyamlmesg, 'domainbchelp')"
    buttonoptions:
      pady:   0
      padx:   1
    gridoptions:
      sticky: 'NE'
  - name:     helpbutton_yBC
    text:     "[?]"
    frame:    frame_yBC header_frame 
    help:     "Need help?"
    row:      0
    col:      3
    command:  "partial(self.showyamlmesg, 'domainbchelp')"
    buttonoptions:
      pady:   0
      padx:   1
    gridoptions:
      sticky: 'NE'
  - name:     helpbutton_zBC
    text:     "[?]"
    frame:    frame_zBC header_frame 
    help:     "Need help?"
    row:      0
    col:      3
    command:  "partial(self.showyamlmesg, 'domainbchelp')"
    buttonoptions:
      pady:   0
      padx:   1
    gridoptions:
      sticky: 'NE'
    
popupwindow:
  # === Plot domain window ===
  plotdomain:
    title:        Plot domain     # optional
    loadonstart:  True            # optional
    width:        350
    height:       320
    inputwidgets:
      - name:       plot_chooseview
        label:      "Choose plot view"
        inputtype:  str
        optionlist: ['XY', 'XZ', 'YZ']
        defaultval: 'XY'
      - name:       plot_windnortharrows
        label:      Plot wind & N arrows
        inputtype:  bool
        defaultval: True
      - name:       spacer1
        labelonly:  True
      - name:       spacer2
        label:      Click on objects below to include in plot
        labelonly:  True
      - name:       plot_sampleprobes
        label:      Plot sample probes
        inputtype:  listbox
        optionlist: "self.parent.listboxpopupwindict['listboxsampling'].getitemlist()"
        defaultval: 
        listboxopt:
          selectmode: multiple
      - name:       plot_refineboxes
        label:      Plot Refinements
        inputtype:  listbox
        optionlist: "self.parent.listboxpopupwindict['listboxtagging'].getitemlist()"
        defaultval: 
        listboxopt:
          selectmode: multiple
      - name:       plot_turbines
        label:      Plot Turbines
        inputtype:  listbox
        optionlist: "self.parent.listboxpopupwindict['listboxactuator'].getitemlist()"
        defaultval: 
        listboxopt:
          selectmode: multiple          
    buttons:
      - name: plot
        text: Plot Domain
        command: "partial(self.savethenexec, 'self.master.plotDomain()')"

  # === Plot FAST output ===
  plotfastout:
    title:        Plot FAST output # optional
    loadonstart:  True             # optional
    width:        350
    height:       350
    inputwidgets:
      - name:       plotfastout_files
        label:      FAST Files
        inputtype:  listbox
        defaultval:
        row:        1
        listboxopt:
          selectmode: multiple
          height: 5
      - name:       plotfastout_vars
        label:      Plot Variables
        inputtype:  listbox
        defaultval: 
        listboxopt:
          selectmode: multiple
          height: 10
        row: 3
      - name:         plotfastout_label
        label:        "Plot options"
        labelonly:    True
        visible:      False

    buttons:
      - name: plotfastout_addfilebutton
        text: Add file
        command: "partial(self.savethenexec, 'self.master.FAST_addoutfilesGUI(self)')"
        row:  2
      - name: plotfastout_loadbutton
        text: Load/Reload Data
        command: "partial(self.savethenexec, 'self.master.FAST_loadallfiles(self)')"
        row:  2
        col:  1
      - name: plotfastout_plotbutton
        text: Plot 
        command: "partial(self.savethenexec, 'self.master.FAST_plotoutputs(window=self)')"
        row:  4

  # === Sampling window ===
  sampling:
    title:        Sampling probe     # optional
    datakeyname:  sampling_name      # optional
    loadonstart:  False              # optional
    width:        450
    height:       450
    frames:
    - name:       probetype_frame
      row:        1
    - name:       probe_file_frame
      title:      Probe_file specifications
      row:        3
      toggled:    True
    - name:       line_probe_frame
      title:      Line probe specifications
      row:        4
      toggled:    True
    - name:       sample_plane_frame
      title:      Sample plane specifications
      row:        5
      toggled:    True    
    inputwidgets:
    - <<: *PREDEFINED_ALWAYSFALSE
      ctrlelem:   
        - input:  sample_plane_xyzheader
          activewhen: ['', 1]
        - input:  line_probe_xyzheader
          activewhen: ['', 1]
    - name:       sampling_label
      label:      Sampling probe input
      labelonly:  True
      row:        0
    - name:       sampling_name
      label:      Name 
      inputtype:  str
      defaultval: newsample
      frame:      probetype_frame
      # row:        1
    - name:       sampling_type
      label:      Type 
      inputtype:  listbox
      optionlist: [ProbeSampler, LineSampler, PlaneSampler]
      defaultval: LineSampler
      frame:      probetype_frame
      # row:        2
      listboxopt:
        width:    12
      outputdef:
        AMR-Wind: type
      ctrlelem:
        - input:  sampling_pf_probe_location_file
          activewhen: ['ProbeSampler', 1]
        - input:  sampling_l_num_points
          activewhen: ['LineSampler', 1]
        - input:  sampling_l_start
          activewhen: ['LineSampler', 1]
        - input:  sampling_l_end
          activewhen: ['LineSampler', 1]
        - input:  sampling_p_num_points
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_origin
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_axis1
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_axis2
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_normal
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_offsets
          activewhen: ['PlaneSampler', 1]
    # -- sample file ---
    - name:       sampling_pf_label
      label:      Choose text file with (x,y,z) probe points
      labelonly:  True
      frame:      probe_file_frame
      # row:        3
    - name:       sampling_pf_probe_location_file
      label:      Filename
      inputtype:  filename
      defaultval:
      frame:      probe_file_frame
      # row:        4
      outputdef:
        AMR-Wind: probe_location_file
    # -- sample line ---
    # - name:       sampling_l_label
    #   label:      Line probe specifications
    #   labelonly:  True
    #   row:        5
    - name:       sampling_l_num_points
      label:      Line num points
      inputtype:  int
      defaultval: 2
      frame:      line_probe_frame
      outputdef:
        AMR-Wind: num_points
    - <<: *PREDEFINED_XYZHEADER
      name:       line_probe_xyzheader
      frame:      line_probe_frame
      row:        3
    - name:       sampling_l_start
      label:      Line start
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      frame:      line_probe_frame
      outputdef:
        AMR-Wind: start
    - name:       sampling_l_end
      label:      Line end
      inputtype:  [float, float, float]
      defaultval: [1, 1, 1]
      frame:      line_probe_frame
      outputdef:
        AMR-Wind: end      
    # -- sample plane --
    - name:       sampling_p_num_points
      label:      Plane num points
      inputtype:  [int, int]
      defaultval: [2, 2]
      frame:      sample_plane_frame
      outputdef:
        AMR-Wind: num_points
        help:     Number of points along axis1 and axis2 of the plane
    - <<: *PREDEFINED_XYZHEADER
      name:       sample_plane_xyzheader
      frame:      sample_plane_frame
      row:        3
    - name:       sampling_p_origin
      label:      Plane origin
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      frame:      sample_plane_frame
      outputdef:
        AMR-Wind: origin
    - name:       sampling_p_axis1
      label:      Plane axis1
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      frame:      sample_plane_frame
      outputdef:
        AMR-Wind: axis1
    - name:       sampling_p_axis2
      label:      Plane axis2
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      frame:      sample_plane_frame
      outputdef:
        AMR-Wind: axis2    
    - name:       sampling_p_normal
      label:      Plane normal
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      frame:      sample_plane_frame
      outputdef:
        AMR-Wind: normal
    - name:       sampling_p_offsets
      label:      Plane offsets
      inputtype:  str
      defaultval: 
      frame:      sample_plane_frame
      outputdef:
        AMR-Wind: offsets
        help:     List containing the distances along the plane normal to offset each plane
  # === Tagging window ===
  tagging:
    title:        Refinement windows # optional
    datakeyname:  tagging_name       # optional
    loadonstart:  False              # optional
    width:        500
    height:       550
    frames:
    - name:       header_frame
      row:        2
    - name:       cartbox_frame
      title:      Cartesian box specifications
      row:        3
      toggled:    True
    - name:       field_frame
      title:      Field refinement details
      row:        4
      toggled:    True
    - name:       geom_frame
      title:      Geometry refinement details
      row:        5
      toggled:    True
    - name:       qcrit_frame
      title:      Q criteria refinement details
      row:        6
      toggled:    True
    inputwidgets:
    - name:       tagging_label
      label:      Refinement window specification
      labelonly:  True
      row:        0
    - name:       tagging_name
      label:      Name 
      inputtype:  str
      defaultval: newrefinement
      frame:      header_frame
      #row:        1
    - name:       tagging_type
      label:      Type 
      inputtype:  listbox
      optionlist: [CartBoxRefinement, FieldRefinement, GeometryRefinement, QCriterionRefinement, VorticityRefinement]
      defaultval: CartBoxRefinement
      frame:      header_frame
      #row:        2
      listboxopt:
        width:    25
      outputdef:
        AMR-Wind: type
      ctrlelem:
        - input: tagging_static_refinement_def
          activewhen: ['CartBoxRefinement', 1]
        - input: tagging_field_name
          activewhen: ['FieldRefinement', 1]
        - input: tagging_field_error
          activewhen: ['FieldRefinement', 1]
        - input: tagging_grad_error
          activewhen: ['FieldRefinement', 1]
        - input: tagging_qc_nondim
          activewhen: ['QCriterionRefinement', 1]
        - input: tagging_qc_values
          activewhen: ['QCriterionRefinement', 1]
        - input: tagging_shapes
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_level
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_geom_type
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_geom_origin
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_geom_xaxis
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_geom_yaxis
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_geom_zaxis
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_geom_start
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_geom_end
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_geom_outer_radius
          activewhen: ['GeometryRefinement', 1]
        - input: tagging_geom_inner_radius
          activewhen: ['GeometryRefinement', 1]

      # TO-DO: finish ctrlelem
    - name:       tagging_static_refinement_def
      label:      CartBox filename
      inputtype:  filename
      defaultval:
      frame:      cartbox_frame
      outputdef:
        AMR-Wind: static_refinement_def
    - name:       tagging_field_name
      label:      Field name
      inputtype:  str
      defaultval:
      frame:      field_frame
      outputdef:
        AMR-Wind: field_name
    - name:       tagging_field_error
      label:      Field error
      inputtype:  str
      defaultval:
      frame:      field_frame
      outputdef:
        AMR-Wind: field_error
    - name:       tagging_grad_error
      label:      Gradient error
      inputtype:  str
      defaultval:
      frame:      field_frame
      outputdef:
        AMR-Wind: grad_error
    - name:       tagging_qc_nondim
      label:      Nondim Q criteria
      inputtype:  bool
      defaultval: True
      frame:      qcrit_frame
      outputdef:
        AMR-Wind: nondim
    - name:       tagging_qc_values
      label:      Q criteria values
      inputtype:  str
      defaultval: 
      frame:      qcrit_frame
      outputdef:
        AMR-Wind: values
    # --- Geometry tagging ---
    #- name:       tagging_label_geom
    #  label:      Geometric shape refinement
    #  labelonly:  True
    - name:       tagging_shapes
      label:      Geometry Names
      inputtype:  str
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: shapes
    - name:       tagging_level
      label:      Geometry level
      inputtype:  int
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: level
    - name:       tagging_geom_type
      label:      Geometry type
      inputtype:  listbox #str
      optionlist: [cylinder, box]
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: type
      listboxopt:
        height:   2
        width:    12
      ctrlelem:
        - input:  tagging_geom_origin
          activewhen: ['box', 1]
        - input:  tagging_geom_xaxis
          activewhen: ['box', 1]
        - input:  tagging_geom_yaxis
          activewhen: ['box', 1]
        - input:  tagging_geom_zaxis
          activewhen: ['box', 1]
        - input:  tagging_geom_start
          activewhen: ['cylinder', 1]
        - input:  tagging_geom_end
          activewhen: ['cylinder', 1]
        - input:  tagging_geom_inner_radius
          activewhen: ['cylinder', 1]
        - input:  tagging_geom_outer_radius
          activewhen: ['cylinder', 1]
    - name:       tagging_geom_origin
      label:      Box corner
      inputtype:  [float, float, float]
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: origin
    - name:       tagging_geom_xaxis
      label:      Box axis 1
      inputtype:  [float, float, float]
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: xaxis
    - name:       tagging_geom_yaxis
      label:      Box axis 2
      inputtype:  [float, float, float]
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: yaxis
    - name:       tagging_geom_zaxis
      label:      Box axis 3
      inputtype:  [float, float, float]
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: zaxis
    - name:       tagging_geom_start
      label:      Cylinder start
      inputtype:  [float, float, float]
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: start
    - name:       tagging_geom_end
      label:      Cylinder end
      inputtype:  [float, float, float]
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: end
    - name:       tagging_geom_outer_radius
      label:      Cylinder Outer R
      inputtype:  float
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: outer_radius
    - name:       tagging_geom_inner_radius
      label:      Cylinder Inner R
      inputtype:  float
      defaultval: 
      frame:      geom_frame
      outputdef:
        AMR-Wind: inner_radius
        help:     Inner radius of cylinder (optional)

# === Turbine window ===
  turbine:
    title:        New Turbine        # optional
    datakeyname:  Actuator_name      # optional
    loadonstart:  False              # optional
    width:        500                # optional
    height:       660                # optional
    frames:
    - name:       turbinename_frame
#      title:      Expert options
      row:        2
    - name:       expert_frame
      title:      Expert options
      row:        3
      toggled:    True
    - name:       turbine_frame
      title:      Turbine specifications
      row:        4
    # - name:       uniformCt_frame
    #   title:      Uniform Ct turbine specifications
    #   toggled:    True
    #   row:        5
    inputwidgets:
    - name:       actuator_label
      label:      Add a new turbine   
      labelonly:  True
      row:        0
    - name:       Actuator_name
      label:      Name 
      inputtype:  str
      defaultval: turbine
      frame:      turbinename_frame
      #row:        1
    - name:       use_turbine_type
      label:      Use turbine type
      inputtype:  str 
      optionlist: "self.parent.listboxpopupwindict['listboxturbinetype'].getitemlist()"
      defaultval: ""
      frame:      turbinename_frame
      #row:        2
    - name:       copy_turb_files
      label:      Copy turbine files
      inputtype:  bool
      defaultval: 1
      frame:      expert_frame
    - name:       edit_fast_files
      label:      Edit FAST files to match
      inputtype:  bool
      defaultval: 1
      frame:      expert_frame
    - <<: *PREDEFINED_ACTUATORSELECTION
      frame:      turbine_frame
      outputdef:
        AMR-Wind: type
    - <<: *PREDEFINED_OPENFAST_INPUT_FILE
      frame:      turbine_frame

    - name:       spacer
      frame:      turbine_frame
      labelonly:  True
    - name:       Actuator_base_position
      label:      Base position (x,y,z)
      inputtype:  [float, float, float]
      defaultval: 
      frame:      turbine_frame
      outputdef:
        AMR-Wind: base_position
        help:     Where the bottom of the tower sits
    - <<: *PREDEFINED_ROTOR_DIAMETER
      name:       Actuator_rotor_diameter
      frame:      turbine_frame
    - <<: *PREDEFINED_HUB_HEIGHT
      name:       Actuator_hub_height
      frame:      turbine_frame
    - <<: *PREDEFINED_NUM_POINTS_BLADE
      name:       Actuator_num_points_blade
      frame:      turbine_frame
    - <<: *PREDEFINED_NUM_POINTS_TOWER
      name:       Actuator_num_points_tower
      frame:      turbine_frame
    - <<: *PREDEFINED_EPSILON
      name:       Actuator_epsilon
      frame:      turbine_frame
      entryopt:
        varlenlist:  True
    - <<: *PREDEFINED_EPSILON_TOWER
      name:       Actuator_epsilon_tower
      frame:      turbine_frame
    - <<: *PREDEFINED_OPENFAST_START_TIME
      name:       Actuator_openfast_start_time
      frame:      turbine_frame
    - <<: *PREDEFINED_OPENFAST_STOP_TIME
      name:       Actuator_openfast_stop_time
      frame:      turbine_frame
    - <<: *PREDEFINED_NACELLE_DRAG_COEFF
      name:       Actuator_nacelle_drag_coeff
      frame:      turbine_frame
    - <<: *PREDEFINED_NACELLE_AREA
      name:       Actuator_nacelle_area
      frame:      turbine_frame
    - <<: *PREDEFINED_YAW
      name:       Actuator_yaw
      frame:      turbine_frame
    - <<: *PREDEFINED_OUTPUT_FREQUENCY
      name:       Actuator_output_frequency
      frame:      turbine_frame
    - <<: *PREDEFINED_DENSITY
      name:       Actuator_density
      frame:      turbine_frame
    buttons:
      - name: preload_turbinetype
        text: Load
        command: "partial(self.savethenexec, 'self.parent.turbinemodels_copytoturbine(window=self)')"
        frame:      turbinename_frame
        row:  1
        col:  2
      - name: update_fast_files
        text: Update FAST now
        command: "partial(self.savethenexec, 'self.parent.turbinemodels_checkupdateFAST(window=self)')"
        frame: expert_frame
        # row:  4
        # col:  2
      - name: saveandupdatefast_files
        text: Save & Update FAST
        command: "partial(self.savethenexec, 'self.parent.turbinemodels_checkupdateFAST(window=self)')"
        row:  6
        col:  0
      - name: savenoupdatefast_files
        text: Save, w/o FAST update
        command: "self.savevals"
        row:  6
        col:  1

# === Turbine type window ===
  turbinetype:
    title:        New Turbine Type   # optional
    datakeyname:  turbinetype_name   
    loadonstart:  False              # optional
    width:        500
    height:       450
    inputwidgets:
    - name:       actuator_label
      label:      Add a new turbine type
      labelonly:  True
    - name:       turbinetype_name
      label:      Name 
      inputtype:  str
      defaultval: turbinetype
    - name:       turbinetype_comment
      label:      Comment
      inputtype:  str
      defaultval: 
    # The following are predefined from anchors
    - <<: *PREDEFINED_ACTUATORSELECTION
    - <<: *PREDEFINED_OPENFAST_INPUT_FILE
    - <<: *PREDEFINED_ROTOR_DIAMETER
      name:       Actuator_rotor_diameter
    - <<: *PREDEFINED_HUB_HEIGHT
      name:       Actuator_hub_height
    - <<: *PREDEFINED_NUM_POINTS_BLADE
      name:       Actuator_num_points_blade
    - <<: *PREDEFINED_NUM_POINTS_TOWER
      name:       Actuator_num_points_tower
    - <<: *PREDEFINED_EPSILON
      name:       Actuator_epsilon
    - <<: *PREDEFINED_EPSILON_TOWER
      name:       Actuator_epsilon_tower
    - <<: *PREDEFINED_OPENFAST_START_TIME
      name:       Actuator_openfast_start_time
    - <<: *PREDEFINED_OPENFAST_STOP_TIME
      name:       Actuator_openfast_stop_time
    - <<: *PREDEFINED_NACELLE_DRAG_COEFF
      name:       Actuator_nacelle_drag_coeff
    - <<: *PREDEFINED_NACELLE_AREA
      name:       Actuator_nacelle_area
    - <<: *PREDEFINED_OUTPUT_FREQUENCY
      name:       Actuator_output_frequency
    - name:       turbinetype_filelocation  # yaml file with the definitions
      label:      File location
      inputtype:  str
      defaultval: 
      visible:    False
      outputdef:
        amrwind_frontend: turbinetype_filelocation  # internal use
    - name:       turbinetype_filedir   # dir with necessary files to copy
      label:      file directory
      inputtype:  str
      defaultval: 
      outputdef:
        amrwind_frontend: turbinetype_filedir

  # === Set up a local run ===
  localrun:
    title:        Run locally     # optional
    loadonstart:  True            # optional
    inputwidgets:
      - name:       localrun_warning
        label:      Warning! This could use a lot of RAM/CPU!
        labelonly:  True
      - name:       localrun_exe
        label:      amr_wind executable
        inputtype:  filename
        defaultval: 'amr_wind'
        fileopenopt:             
          selecttype: open       # open/saveas/directory [optional]          
      - name:       localrun_modules
        label:      modules to load
        inputtype:  str
        defaultval: 
      - name:       localrun_mpicmd
        label:      MPI command
        inputtype:  str
        defaultval: mpirun
      - name:       localrun_nproc
        label:      N processors
        inputtype:  int
        defaultval: 1
      - name:       localrun_logfile
        label:      Log filename
        inputtype:  filename
        defaultval: 
        fileopenopt:             
          selecttype: saveas       # open/saveas/directory [optional]
    buttons:
      - name: save_and_run
        text: Save & Run
        command: "partial(self.savethenexec, 'self.master.localrun_execute()')"
        row:  6
      - name: stop_run
        text: Stop job
        command: "partial(self.savethenexec, 'self.master.localrun_kill()')"
        row:  6
        col:  1

  # === Set up a submission script ===
  submitscript:
    title:        Submission script
    loadonstart:  True            
    width:        475
    inputwidgets:
      - name:       submitscript_replaceinputfilestring
        visible:    False
        defaultval: submitscript_inputfile
      - name:       submitscript_name
        label:      Set up submission script
        labelonly:  True
      - name:       submitscript_filename
        label:      submit script filename
        inputtype:  filename
        defaultval: 
        entryopt:
          width:    25
        fileopenopt:             
          selecttype: saveas       # open/saveas/directory [optional]
      # - name:       submitscript_logfile
      #   label:      Log filename
      #   inputtype:  filename
      #   defaultval: 
      #   fileopenopt:             
      #     selecttype: saveas       # open/saveas/directory [optional]
      #   outputdef:
      #     replacevar: submitscript_logfile
      - name:       submitscript_exe
        label:      amr_wind executable
        inputtype:  filename
        defaultval: 'amr_wind'
        entryopt:
          width:    25
        fileopenopt:             
          selecttype: open       # open/saveas/directory [optional]          
        outputdef:
          replacevar: submitscript_exe
      - name:       submitscript_modules
        label:      modules to load
        inputtype:  str
        defaultval: 
        entryopt:
          width:    25
        outputdef:
          replacevar: submitscript_modules
      - name:       submitscript_jobname
        label:      Job name
        inputtype:  str
        defaultval: amrwind1
        outputdef:
          replacevar: submitscript_jobname
      - name:       submitscript_numnodes
        label:      Number of nodes
        inputtype:  int
        defaultval: 1
        outputdef:
          replacevar: submitscript_numnodes
      - name:       submitscript_runtime
        label:      "Run time (HH:MM:SS)"
        inputtype:  str
        defaultval: "1:00:00"
        outputdef:
          replacevar: submitscript_runtime
      - name:       submitscript_submitcmd
        label:      "Submit command"
        inputtype:  str
        defaultval: "bsub < "
    buttons:
      - name: preview_script
        text: Preview script
        command: "partial(self.savethenexec, 'self.master.submitscript_previewscript(window=self)')"
      - name: save_script
        text: Save script
        command: "partial(self.savethenexec, 'self.master.submitscript_savescript(window=self)')"
      - name: submit_job
        text: Submit job
        command: "partial(self.savethenexec, 'self.master.submitscript_savescript(window=self, guimesg=True, submit=True)')"


listboxpopupwindows:
  - name:       listboxsampling
    label:      "Probes:"
    frame:      frame_IOsampling  
    #row:        0                   # optional
    popupinput: sampling             # required
    outputprefix:                    # optional
      AMR-Wind: sampling       
    outputlist:                      # optional
      AMR-Wind: labels

  - name:       listboxtagging
    label:      "Refinement zones:"
    frame:      frame_refinement
    popupinput: tagging
    outputlist:                      # optional
      AMR-Wind: labels
    outputprefix:                    # optional
      AMR-Wind: tagging

  - name:       listboxturbinetype
    label:      "Models"
    frame:      frame_turbineglobals
    row:        2
    popupinput: turbinetype

  - name:       listboxactuator
    label:      "Turbine List:"
    frame:      frame_turbineglobals
    row:        8
    popupinput: turbine
    editsavebutton: False
    closebuttontxt: Close
    outputprefix:                    # optional
      AMR-Wind: Actuator
    outputlist:                      # optional
      AMR-Wind: labels

helpwindows:
  gotnothing: 
    mesg: |
      I've got nothing.  Somebody add help 
      here
    options:
      autowidth: False
      title: Help
  domain: 
    mesg: |
      DOMAIN ORIENTATION AND CONFIGURATION

      Orientation 
      ----------------
      This is an ASCII-art schematic of the domain:        
         y
         |
         |__________________________corner2 (x,y,z)
         |                          |
         |                          |
         |__________________________|----> x 
      corner1 (x,y,z)

      Boundary names
      ----------------

      The boundaries of the domain are called 
      xlo, xhi, ylo, yhi, zlo, zhi:

          y
          |
          |________YHI________________
          |                          |
      XLO |                          |XHI
          |__________________________|----> x 
                   YLO
    options:
      autowidth: True
      height:    30
      title:     Domain help      
  # -----------------------------------------------------
  domainbchelp: 
    mesg: |
      Boundary names
      ----------------

      The boundaries of the domain are called     
      xlo, xhi, ylo, yhi, zlo, zhi:

          y
          |
          |________YHI________________
          |                          |
      XLO |                          |XHI
          |__________________________|----> x 
                   YLO

      BC types
      ----------------
      [WRITE SOMETHING IN HERE]
      pressure_inflow
      pressure_outflow
      mass_inflow
      zero_gradient
      no_slip_wall
      slip_wall
      wall_model
      fixed_gradient
    

    options:
      autowidth: True
      height: 30
      title: Domain BC Help
