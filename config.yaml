tabs:
  - Simulation
  - Domain
  - ABL
  - Refinement
  - IO
  - Postpro
  - Junk

frames:
  # ==== Simulation frames ==== 
  - name:  frame_time
    tab:   Simulation
    row:   2
    title: Time control
  - name:  frame_restart
    tab:   Simulation
    row:   3
    title: Restart parameters
  - name:  frame_godunov
    tab:   Simulation
    row:   4
    title: Godunov parameters
  - name:  frame_incflo
    tab:   Simulation
    row:   5
    title: Fluid and transport properties
  - name:  frame_turbulence
    tab:   Simulation
    row:   6
    title: Turbulence parameters
  - name:  frame_tolerances
    tab:   Simulation
    row:   7
    title: Tolerances
  # ==== Domain frames ==== 
  - name:  frame_Mesh
    tab:   Domain
    #row:   0
    title: Domain and Mesh
  - name:  frame_BC
    tab:   Domain
    title: Boundary conditions
  - name:  frame_xBC
    tab:   Domain
    title: X Boundary conditions
  - name:  frame_yBC
    tab:   Domain
    title: Y Boundary conditions
  - name:  frame_zBC
    tab:   Domain
    title: Z Boundary conditions

  # ==== ABL frames ==== 
  - name:  frame_ABLforcing
    tab:   ABL
    row:   1
    title: ABL forcing
  - name:  frame_ABLphysics
    tab:   ABL
    title: ABL physics
  - name:  frame_ABLprop
    tab:   ABL
    title: ABL properties
  - name:  frame_Coriolis
    tab:   ABL
    title: Coriolis forces
  - name:  frame_Boussinesq
    tab:   ABL
    title: Boussinesq forces
  - name:  frame_ABLTprof
    tab:   ABL
    title: ABL temperature profiles
  - name:  frame_ABLpeturb
    tab:   ABL
    title: ABL perturbations
  - name:  frame_ABLoutput
    tab:   ABL
    title: ABL output parameters

  # ==== IO frames ==== 
  - name:  frame_IOplotting
    tab:   IO
    row:   1
    title: Plot outputs
  - name:  frame_IOsampling
    tab:   IO
    row:   4
    title: Sampling probes

  # ==== Refinement frames ==== 
  - name:  frame_refinement
    tab:   Refinement
    row:   1
    title: Nested refinement parameters

  # ==== Postprocessing frames ==== 
  - name:  frame_postproABL
    tab:   Postpro
    row:   1
    title: ABL Postprocessing
  - name:  frame_postprosampling
    tab:   Postpro
    row:   2
    title: Plot Sample Planes


predefinedlists:
  # Check amr-wind/incflo_enums.H
  bctypes: &bctypes [pressure_inflow, pressure_outflow, mass_inflow, zero_gradient,  no_slip_wall, slip_wall, wall_model, fixed_gradient]

inputwidgets:
  # ========== Simulation inputs ==============================
  - name:       stop_time
    label:      Max time
    frame:      frame_time
    inputtype:  float
    defaultval: 100.0
    outputdef:
      AMR-Wind: time.stop_time

  - name:       max_step
    label:      Max steps
    frame:      frame_time
    inputtype:  int
    defaultval: -1
    outputdef:
      AMR-Wind: time.max_step

  - name:       fixed_dt
    label:      dt
    frame:      frame_time
    inputtype:  float
    defaultval: 0.25
    outputdef:
      AMR-Wind: time.fixed_dt

  - name:       cfl
    label:      cfl
    frame:      frame_time
    inputtype:  float
    defaultval: 0.95
    outputdef:
      AMR-Wind: time.cfl

  - name:       checkpoint_interval
    label:      checkpoint interval
    frame:      frame_restart
    inputtype:  int
    defaultval: #10000
    outputdef:
      AMR-Wind: time.checkpoint_interval

  - name:       physics
    label:      Simulation type
    tab:        Simulation
    row:        1
    inputtype:  listbox
    optionlist: [FreeStream, ABL, RayleighTaylor, BoussinesqBubble, TaylorGreenVortex]
    defaultval: ABL
    listboxopt:
      selectmode: multiple
    outputdef:
      AMR-Wind: incflo.physics
  # ---------- Restart parameters -----------------------------
  - name:       verbose
    label:      Verbosity
    frame:      frame_IOplotting
    inputtype:  int
    defaultval: 0
    outputdef:
      AMR-Wind: incflo.verbose

  - name:       check_file
    label:      Check file
    frame:      frame_restart
    inputtype:  str
    defaultval: chk
    outputdef:
      AMR-Wind: io.check_file
      
  - name:       restart_file
    label:      Restart file
    frame:      frame_restart
    inputtype:  filename
    defaultval: 
    outputdef:
      AMR-Wind: io.restart_file

  # ---------- Godunov parameters -----------------------------
  - name:       use_godunov
    label:      Use godunov
    frame:      frame_godunov
    inputtype:  bool
    defaultval: 1
    ctrlelem:
      - input:  godunov_type
    outputdef:
      AMR-Wind: incflo.use_godunov

  - name:       godunov_type
    label:      Godunov type
    frame:      frame_godunov
    inputtype:  str
    optionlist: [ppm, ppm_nolim, weno]
    defaultval: ppm
    outputdef:
      AMR-Wind: incflo.godunov_type

  # ---------- Turbulence parameters --------------------------
  - name:       turbulence_model
    label:      Turbulence model
    frame:      frame_turbulence
    inputtype:  listbox
    optionlist: [Laminar, OneEqKsgsM84, Smagorinsky]
    defaultval: 
    outputdef:
      AMR-Wind: turbulence.model
    ctrlelem:
      - input:  TKE_source_terms
        activewhen: ['OneEqKsgsM84', 1]
      - input:  SmagorinskyCs
        activewhen: ['Smagorinsky', 1]

  - name:       TKE_source_terms
    label:      TKE source terms
    frame:      frame_turbulence
    inputtype:  listbox
    optionlist: [KsgsM84Src]
    outputdef:
      AMR-Wind: TKE.source_terms

  - name:       SmagorinskyCs
    label:      Smagorinsky Cs
    frame:      frame_turbulence
    inputtype:  float
    defaultval: 0.135
    outputdef:
      AMR-Wind: Smagorinsky_coeffs.Cs
  # ---------- Tolerance parameters --------------------------
  - name:       nodal_proj.mg_rtol
    label:      nodal_proj.mg_rtol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: nodal_proj.mg_rtol

  - name:       nodal_proj.mg_atol
    label:      nodal_proj.mg_atol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: nodal_proj.mg_atol

  - name:       mac_proj.mg_rtol
    label:      mac_proj.mg_rtol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: mac_proj.mg_rtol

  - name:       mac_proj.mg_atol
    label:      mac_proj.mg_atol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: mac_proj.mg_atol

  - name:       diffusion.mg_rtol
    label:      diffusion.mg_rtol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: diffusion.mg_rtol

  - name:       diffusion.mg_atol
    label:      diffusion.mg_atol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: diffusion.mg_atol

  - name:       temperature_diffusion.mg_rtol
    label:      temperature_diffusion.mg_rtol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: temperature_diffusion.mg_rtol

  - name:       temperature_diffusion.mg_atol
    label:      temperature_diffusion.mg_atol
    frame:      frame_tolerances
    inputtype:  float
    outputdef:
      AMR-Wind: temperature_diffusion.mg_atol

  # ---------- incflo fluid properties ------------------------
  - name:       gravity
    label:      gravity
    frame:      frame_incflo
    inputtype:  [float, float, float]
    defaultval: [0.0, 0.0, -9.81]
    outputdef:
      AMR-Wind: incflo.gravity

  - name:       density
    label:      density
    frame:      frame_incflo
    inputtype:  float
    defaultval: 1.00
    outputdef:
      AMR-Wind: incflo.density

  - name:       viscosity
    label:      viscosity
    frame:      frame_incflo
    inputtype:  float
    defaultval: 1.872e-5
    outputdef:
      AMR-Wind: transport.viscosity

  - name:       laminar_prandtl
    label:      Laminar prandtl
    frame:      frame_incflo
    inputtype:  float
    defaultval: 0.7
    outputdef:
      AMR-Wind: transport.laminar_prandtl

  - name:       turbulent_prandtl
    label:      Turb. prandtl
    frame:      frame_incflo
    inputtype:  float
    defaultval: 0.3333
    outputdef:
      AMR-Wind: transport.turbulent_prandtl

  # ========== Mesh and Domain inputs =========================
  - name:       prob_lo
    label:      "Domain corner 1"
    frame:      frame_Mesh
    inputtype:  [float, float, float] 
    defaultval: [0.0, 0.0, 0.0]
    outputdef:
      AMR-Wind: geometry.prob_lo

  - name:       prob_hi
    label:      "Domain corner 2"
    frame:      frame_Mesh
    inputtype:  [float, float, float] 
    defaultval: [1000.0, 1000.0, 1000.0]
    outputdef:
      AMR-Wind: geometry.prob_hi

  - name:       n_cell
    label:      "Mesh size"
    frame:      frame_Mesh
    inputtype:  [int, int, int] 
    defaultval: [48, 48, 48]
    outputdef:
      AMR-Wind: amr.n_cell

  - name:       max_level
    label:      Max refinement level
    frame:      frame_refinement #frame_Mesh
    inputtype:  int
    defaultval: 0
    outputdef:
      AMR-Wind: amr.max_level

  - name:       is_periodicx
    label:      "Periodic in X"
    frame:      frame_BC
    inputtype:  bool
    defaultval: 1
    ctrlelem:
      - frame:      frame_xBC
        activewhen: ['', 0]

  - name:       is_periodicy
    label:      "Periodic in Y"
    frame:      frame_BC
    inputtype:  bool
    defaultval: 1
    ctrlelem:
      - frame:      frame_yBC
        activewhen: ['', 0]

  - name:       is_periodicz
    label:      "Periodic in Z"
    frame:      frame_BC
    inputtype:  bool
    defaultval: 0
    ctrlelem:
      - frame:      frame_zBC
        activewhen: ['', 0]

  - name:       isperiodic
    label:    
    frame:      frame_BC
    inputtype:  mergedboollist
    mergedboollist:
      - ['is_periodicx', '1', '0']
      - ['is_periodicy', '1', '0']      
      - ['is_periodicz', '1', '0']
    outputdef:
      AMR-Wind: geometry.is_periodic

  - name:       xlo_type
    label:      "Lower X velocity BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: xlo.type

  - name:       xlo_temperature_type
    label:      "Lower X temp BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: wall_model
    outputdef:
      AMR-Wind: xlo.temperature_type

  - name:       xlo_temperature
    label:      "Lower Y temperature"
    frame:      frame_xBC
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: xlo.temperature

  - name:       xlo_tke_type
    label:      "Lower X TKE BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: #None
    outputdef:
      AMR-Wind: xlo.tke_type

  - name:       xhi_type
    label:      "Upper X velocity BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: xhi.type

  - name:       xhi_temperature_type
    label:      "Upper X temp BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: fixed_gradient
    outputdef:
      AMR-Wind: xhi.temperature_type

  - name:       xhi_temperature
    label:      "Upper X temperature"
    frame:      frame_xBC
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: xhi.temperature

  - name:       xhi_tke_type
    label:      "Upper X TKE BC"
    frame:      frame_xBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: #None
    outputdef:
      AMR-Wind: xhi.tke_type

  - name:       ylo_type
    label:      "Lower Y velocity BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: ylo.type

  - name:       ylo_temperature_type
    label:      "Lower Y temp BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: wall_model
    outputdef:
      AMR-Wind: ylo.temperature_type

  - name:       ylo_temperature
    label:      "Lower Y temperature"
    frame:      frame_yBC
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: ylo.temperature

  - name:       ylo_tke_type
    label:      "Lower Y TKE BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: #None
    outputdef:
      AMR-Wind: ylo.tke_type

  - name:       yhi_type
    label:      "Upper Y velocity BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: yhi.type

  - name:       yhi_temperature_type
    label:      "Upper Y temp BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: fixed_gradient
    outputdef:
      AMR-Wind: yhi.temperature_type

  - name:       yhi_temperature
    label:      "Upper Y temperature"
    frame:      frame_yBC
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: yhi.temperature

  - name:       yhi_tke_type
    label:      "Upper Y TKE BC"
    frame:      frame_yBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: #None
    outputdef:
      AMR-Wind: yhi.tke_type

  - name:       zlo_type
    label:      "Lower Z velocity BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: zlo.type

  - name:       zlo_temperature_type
    label:      "Lower Z temp BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: wall_model
    outputdef:
      AMR-Wind: zlo.temperature_type

  - name:       zlo_temperature
    label:      "Lower Z temperature"
    frame:      frame_zBC
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: zlo.temperature

  - name:       zlo_tke_type
    label:      "Lower Z TKE BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: slip_wall
    outputdef:
      AMR-Wind: zlo.tke_type

  - name:       zhi_type
    label:      "Upper Z velocity BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: no_slip_wall
    outputdef:
      AMR-Wind: zhi.type

  - name:       zhi_temperature_type
    label:      "Upper Z temp BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: fixed_gradient
    outputdef:
      AMR-Wind: zhi.temperature_type

  - name:       zhi_temperature
    label:      "Upper Z temperature"
    frame:      frame_zBC
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: zhi.temperature

  - name:       zhi_tke_type
    label:      "Upper Z TKE BC"
    frame:      frame_zBC
    inputtype:  str
    optionlist: *bctypes
    defaultval: #slip_wall
    outputdef:
      AMR-Wind: zhi.tke_type

  # ============================================================
  # ========== ABL forcing selection ==========================
  - name:       ABLForcing
    label:      add ABL Forcing
    frame:      frame_ABLforcing
    inputtype:  bool
    defaultval: 1
    ctrlelem:  
      - frame:   frame_ABLphysics

  - name:       CoriolisForcing
    label:      add Coriolis forces
    frame:      frame_ABLforcing
    inputtype:  bool
    defaultval: 1
    ctrlelem:  
      - frame:  frame_Coriolis

  - name:       BoussinesqForcing
    label:      add Boussinesq forcing
    frame:      frame_ABLforcing
    inputtype:  bool
    defaultval: 1
    ctrlelem:  
      - frame:  frame_Boussinesq

  - name:       ICNS_source_terms
    label:    
    frame:      frame_ABLforcing
    inputtype:  mergedboollist
    mergedboollist:
      - ['ABLForcing',        'ABLForcing',          '']
      - ['BoussinesqForcing', 'BoussinesqBuoyancy',  '']    
      - ['CoriolisForcing',   'CoriolisForcing',     '']
    outputdef:
      AMR-Wind: ICNS.source_terms
  # ========== ABL output parameters ==========================
  - name:       ABL_stats_output_frequency
    label:      Output frequency
    frame:      frame_ABLoutput
    inputtype:  int
    defaultval: 2
    outputdef:
      AMR-Wind: ABL.stats_output_frequency

  - name:       ABL_stats_output_format
    label:      Output format
    frame:      frame_ABLoutput
    inputtype:  str
    optionlist: [netcdf]
    defaultval: netcdf
    outputdef:
      AMR-Wind: ABL.stats_output_format

  # ========== ABL specification ==============================
  - name:       ABL_velocity
    label:      Wind vector
    frame:      frame_ABLphysics
    inputtype:  [float, float, float] 
    defaultval: [10.0, 0.0, 0.0]
    outputdef:
      AMR-Wind: incflo.velocity

  - name:       useWSDir
    label:      Use speed & dir instead
    frame:      frame_ABLphysics
    inputtype:  bool
    defaultval: 0
    ctrlelem:
      - input:  ABL_windspeed
      - input:  ABL_winddir
      - input:  ABL_velocity
        activewhen: ['', 0]

  - name:       ABL_windspeed
    label:      Wind speed
    frame:      frame_ABLphysics
    inputtype:  float    

  - name:       ABL_winddir
    label:      Wind direction
    frame:      frame_ABLphysics
    inputtype:  float

  - name:       forcing_height
    label:      Forcing height
    frame:      frame_ABLphysics
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: ABLForcing.abl_forcing_height

  - name:       kappa
    label:      kappa
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 0.41
    outputdef:
      AMR-Wind: ABL.kappa

  - name:       ABL_normal_direction
    label:      ABL normal direction
    frame:      frame_ABLprop
    inputtype:  int
    defaultval: 2
    outputdef:
      AMR-Wind: ABL.normal_direction

  - name:       z0
    label:      z0 roughness
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 0.0005
    outputdef:
      AMR-Wind: ABL.surface_roughness_z0

  - name:       reference_temperature
    label:      ABL ref temp
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 300.0
    outputdef:
      AMR-Wind: ABL.reference_temperature

  - name:       surface_temp_rate
    label:      surf temp rate 
    frame:      frame_ABLprop
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: ABL.surface_temp_rate

  - name:       latitude
    label:      Latitude
    frame:      frame_Coriolis
    inputtype:  float
    defaultval: 0.0
    outputdef:
      AMR-Wind: CoriolisForcing.latitude

  - name:       rotational_time_period
    label:      Rotation period
    frame:      frame_Coriolis
    inputtype:  float
    defaultval: 86164.0900027328
    outputdef:
      AMR-Wind: CoriolisForcing.rotational_time_period

  - name:       north_vector
    label:      North direction
    frame:      frame_Coriolis
    inputtype:  [float, float, float] 
    defaultval: [0.0, 1.0, 0.0]
    outputdef:
      AMR-Wind: CoriolisForcing.north_vector

  - name:       east_vector
    label:      East direction
    frame:      frame_Coriolis
    inputtype:  [float, float, float] 
    defaultval: [1.0, 0.0, 0.0]
    outputdef:
      AMR-Wind: CoriolisForcing.east_vector

  - name:       boussinesq_reference_temperature
    label:      Reference Temperature
    frame:      frame_Boussinesq
    inputtype:  float
    defaultval: 300.0
    outputdef:
      AMR-Wind: BoussinesqBuoyancy.reference_temperature 

  - name:       temperature_heights
    label:      Temp profile z
    frame:      frame_ABLTprof
    inputtype:  str
    defaultval: 0.0 650.0 750.0 1000.0
    outputdef:
      AMR-Wind: ABL.temperature_heights

  - name:       temperature_values
    label:      Temp profile val
    frame:      frame_ABLTprof
    inputtype:  str
    defaultval: 300.0 300.0 308.0 308.75 
    outputdef:
      AMR-Wind: ABL.temperature_values

  - name:       perturb_velocity
    label:      Apply vel perturbations
    frame:      frame_ABLpeturb
    inputtype:  bool
    defaultval: 0
    outputdef:
      AMR-Wind: ABL.perturb_velocity
    ctrlelem:
      - input:  perturb_ref_height
      - input:  Uperiods
      - input:  Vperiods
      - input:  deltaU
      - input:  deltaV

  - name:       perturb_ref_height
    label:      Ref z for vel perturb
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 50.0
    outputdef:
      AMR-Wind: ABL.perturb_ref_height

  - name:       Uperiods
    label:      Num of periods in x
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 4.0
    outputdef:
      AMR-Wind: ABL.Uperiods

  - name:       Vperiods
    label:      Num of periods in y
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 4.0
    outputdef:
      AMR-Wind: ABL.Vperiods

  - name:       deltaU
    label:      Amp. of U fluct.
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 1.0
    outputdef:
      AMR-Wind: ABL.deltaU

  - name:       deltaV
    label:      Amp. of V fluct.
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 1.0
    outputdef:
      AMR-Wind: ABL.deltaV

  - name:       perturb_temperature
    label:      Apply T perturbations
    frame:      frame_ABLpeturb
    inputtype:  bool
    defaultval: 0
    outputdef:
      AMR-Wind: ABL.perturb_temperature
    ctrlelem:
      - input:  theta_amplitude
      - input:  cutoff_height

  - name:       theta_amplitude
    label:      Amp. of T fluct.
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 0.8
    outputdef:
      AMR-Wind: ABL.theta_amplitude

  - name:       cutoff_height
    label:      Max T perturb height
    frame:      frame_ABLpeturb
    inputtype:  float
    defaultval: 100.0
    outputdef:
      AMR-Wind: ABL.cutoff_height
  # =========== Sampling stuff here ====================
  - name:       plot_label
    label:      Plotting inputs
    tab:        IO
    row:        0
    labelonly:  True

  - name:       plot_interval
    label:      Plot interval
    frame:      frame_IOplotting
    inputtype:  int
    defaultval: 1000
    outputdef:
      AMR-Wind: time.plot_interval

  - name:       plot_file
    label:      Plot file
    frame:      frame_IOplotting
    inputtype:  str
    defaultval: plt
    outputdef:
      AMR-Wind: io.plot_file

  - name:       KE_int
    label:      ouput KE interval
    frame:      frame_IOplotting
    inputtype:  int
    defaultval: -1
    outputdef:
      AMR-Wind: io.KE_int

  - name:       post_processing
    label:      Post processing
    tab:        IO
    row:        3
    inputtype:  listbox
    optionlist: [sampling]
#    defaultval: sampling
    listboxopt:
      selectmode: multiple
    outputdef:
      AMR-Wind: incflo.post_processing
    ctrlelem:
      - frame:  frame_IOsampling
        activewhen: ['sampling', 1]

  - name:       sampling_output_frequency
    label:      Output freq
    frame:      frame_IOsampling
    inputtype:  int
    defaultval: 100
    outputdef:
      AMR-Wind: sampling.output_frequency

  - name:       sampling_fields
    label:      Variables
    frame:      frame_IOsampling
    inputtype:  listbox
    optionlist: [velocity, temperature]
    defaultval: velocity
    listboxopt:
      selectmode: multiple
    outputdef:
      AMR-Wind: sampling.fields

  # =========== Postprocessing stuff here ====================
  # ----------- ABL postprocessing -----------------
  - name:       ablstats_file
    label:      ABL Statistics file
    frame:      frame_postproABL
    row:        1
    inputtype:  filename

  - name:       ablstats_avgt
    label:      Avg times
    frame:      frame_postproABL
    row:        4
    inputtype:  [float, float]
    defaultval: [0.0, 0.0]

  - name:       ablstats_avgz
    label:      Avg heights
    frame:      frame_postproABL
    inputtype:  str
    defaultval: 

  - name:       ablstats_profileplot
    label:      ABL Profile Stats
    frame:      frame_postproABL
    inputtype:  listbox
    optionlist: "parent.ABLpostpro_getprofileslist()"
    listboxopt:
      selectmode: multiple
      height:     5

  - name:       ablstats_scalarplot
    label:      ABL Scalar Stats
    frame:      frame_postproABL
    inputtype:  listbox
    optionlist: "parent.ABLpostpro_getscalarslist()"
    row:        8
    listboxopt:
      selectmode: multiple
      height:     5


  - name:       ablstats_reportlabel
    label:      Print ABL report
    frame:      frame_postproABL
    row:        10
    labelonly:  True

  # ----------- ABL postprocessing -----------------
  - name:       ncsampling_file
    label:      NetCDF file
    frame:      frame_postprosampling
    row:        1
    inputtype:  filename

  # =========== Junk stuff here ========================
  - name: input_3
    label: "list of options"
    tab:  Junk
    inputtype: str
    optionlist: ['optionA', 'optionB']
    defaultval: 'optionA'

  - name: label1
    label: "This is some label"
    labelonly: True
    tab:  Junk

  - name: label2
    label: "Some more helpful advice"
    labelonly: True
    tab:  Junk

buttons:
  - name: exitbutton
    text: Exit
    tab:  Junk
    row:  9
    command: self.quit

  - name: reloadconfig
    text: reload yaml
    tab:  Junk
    command: "self.reloadconfig"

  - name: pullvars
    text: pull vars
    tab:  Junk
    command: "partial(pullvals, self.inputvars, statuslabel=self.statusbar)"

  - name: writeInput
    text: dump input file
    tab:  Junk
    command: "partial(self.writeAMRWindInput, '', verbose=True)"

  - name:    loadABLstatsfile
    text:    Load file
    frame:   frame_postproABL
    row:     2
    col:     2
    command: "self.ABLpostpro_loadnetcdffile"

  - name:    plotABLstatsprofile
    text:    Plot profiles
    frame:   frame_postproABL
    row:     7
    col:     1
    command: "self.ABLpostpro_plotprofiles"

  - name:    plotABLexportprofile
    text:    Export profiles
    frame:   frame_postproABL
    row:     7
    col:     2
    command: "self.ABLpostpro_exportprofiles"

  - name:    plotABLscalars
    text:    Plot scalars
    frame:   frame_postproABL
    row:     9
    col:     1
    command: "self.ABLpostpro_plotscalars"

  - name:    printABLstatsreport
    text:    Print report
    frame:   frame_postproABL
    row:     10
    col:     1
    command: "self.ABLpostpro_printreport"

    
popupwindow:
  # === Plot domain window ===
  plotdomain:
    title:        Plot domain     # optional
    loadonstart:  True            # optional
    inputwidgets:
      - name:       plot_chooseview
        label:      "Choose plot view"
        inputtype:  str
        optionlist: ['XY', 'XZ', 'YZ']
        defaultval: 'XY'
      # - name:       plot_sampleprobebool
      #   label:      Plot sample probes
      #   inputtype:  bool
      #   defaultval: True
      - name:       plot_refinement
        label:      Plot refinement regions
        inputtype:  bool
        defaultval: True
      - name:       plot_windnortharrows
        label:      Plot wind & N arrows
        inputtype:  bool
        defaultval: True
      - name:       plot_sampleprobes
        label:      Plot sample probes
        inputtype:  listbox
        optionlist: "self.parent.listboxpopupwindict['listboxsampling'].getitemlist()"
        defaultval: 
        listboxopt:
          selectmode: multiple
          
    buttons:
      - name: plot
        text: Plot Domain
        command: "partial(self.savethenexec, 'self.master.plotDomain()')"

  # === Sampling window ===
  sampling:
    title:        Sampling probe     # optional
    datakeyname:  sampling_name      # optional
    loadonstart:  False              # optional
    inputwidgets:
    - name:       sampling_label
      label:      Sampling probe input
      labelonly:  True
    - name:       sampling_name
      label:      Name 
      inputtype:  str
      defaultval: newsample
    - name:       sampling_type
      label:      Type 
      inputtype:  listbox
      optionlist: [ProbeSampler, LineSampler, PlaneSampler]
      defaultval: LineSampler
      listboxopt:
        width:    12
      outputdef:
        AMR-Wind: type
      ctrlelem:
        - input:  sampling_pf_probe_location_file
          activewhen: ['ProbeSampler', 1]
        - input:  sampling_l_num_points
          activewhen: ['LineSampler', 1]
        - input:  sampling_l_start
          activewhen: ['LineSampler', 1]
        - input:  sampling_l_end
          activewhen: ['LineSampler', 1]
        - input:  sampling_p_num_points
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_origin
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_axis1
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_axis2
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_normal
          activewhen: ['PlaneSampler', 1]
        - input:  sampling_p_offsets
          activewhen: ['PlaneSampler', 1]
    # -- sample line ---
    - name:       sampling_pf_label
      label:      Probe file specifications
      labelonly:  True
    - name:       sampling_pf_probe_location_file
      label:      Filename
      inputtype:  filename
      defaultval:
      outputdef:
        AMR-Wind: probe_location_file
    # -- sample line ---
    - name:       sampling_l_label
      label:      Line probe specifications
      labelonly:  True
    - name:       sampling_l_num_points
      label:      Line num points
      inputtype:  int
      defaultval: 2
      outputdef:
        AMR-Wind: num_points
    - name:       sampling_l_start
      label:      Line start
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      outputdef:
        AMR-Wind: start
    - name:       sampling_l_end
      label:      Line end
      inputtype:  [float, float, float]
      defaultval: [1, 1, 1]
      outputdef:
        AMR-Wind: end      
    # -- sample plane --
    - name:       sampling_p_label
      label:      Plane probe specifications
      labelonly:  True
    - name:       sampling_p_num_points
      label:      Plane num points
      inputtype:  [int, int]
      defaultval: [2, 2]
      outputdef:
        AMR-Wind: num_points
    - name:       sampling_p_origin
      label:      Plane origin
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      outputdef:
        AMR-Wind: origin
    - name:       sampling_p_axis1
      label:      Plane axis1
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      outputdef:
        AMR-Wind: axis1
    - name:       sampling_p_axis2
      label:      Plane axis2
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      outputdef:
        AMR-Wind: axis2    
    - name:       sampling_p_normal
      label:      Plane normal
      inputtype:  [float, float, float]
      defaultval: [0, 0, 0]
      outputdef:
        AMR-Wind: normal
    - name:       sampling_p_offsets
      label:      Plane offsets
      inputtype:  str
      defaultval: 0
      outputdef:
        AMR-Wind: offsets
  # === Tagging window ===
  tagging:
    title:        Refinement windows # optional
    datakeyname:  tagging_name       # optional
    loadonstart:  False              # optional
    inputwidgets:
    - name:       tagging_label
      label:      Refinement window specification
      labelonly:  True
    - name:       tagging_name
      label:      Name 
      inputtype:  str
      defaultval: newrefinement
    - name:       tagging_type
      label:      Type 
      inputtype:  listbox
      optionlist: [CartBoxRefinement, FieldRefinement, GeometryRefinement, QCriterionRefinement, VorticityRefinement]
      defaultval: CartBoxRefinement
      listboxopt:
        width:    20
      outputdef:
        AMR-Wind: type
      ctrlelem:
        - input: tagging_static_refinement_def
          activewhen: ['CartBoxRefinement', 1]
        - input: tagging_field_name
          activewhen: ['FieldRefinement', 1]
        - input: tagging_field_error
          activewhen: ['FieldRefinement', 1]
        - input: tagging_grad_error
          activewhen: ['FieldRefinement', 1]
        - input: tagging_qc_nondim
          activewhen: ['QCriterionRefinement', 1]
        - input: tagging_qc_values
          activewhen: ['QCriterionRefinement', 1]
      # TO-DO: finish ctrlelem
    - name:       tagging_static_refinement_def
      label:      CartBox filename
      inputtype:  filename
      defaultval:
      outputdef:
        AMR-Wind: static_refinement_def
    - name:       tagging_field_name
      label:      Field name
      inputtype:  str
      defaultval:
      outputdef:
        AMR-Wind: field_name
    - name:       tagging_field_error
      label:      Field error
      inputtype:  str
      defaultval:
      outputdef:
        AMR-Wind: field_error
    - name:       tagging_grad_error
      label:      Gradient error
      inputtype:  str
      defaultval:
      outputdef:
        AMR-Wind: grad_error
    - name:       tagging_qc_nondim
      label:      Nondim Q criteria
      inputtype:  bool
      defaultval: True
      outputdef:
        AMR-Wind: nondim
    - name:       tagging_qc_values
      label:      Q criteria values
      inputtype:  str
      defaultval: 
      outputdef:
        AMR-Wind: values
        
        
listboxpopupwindows:
  - name:       listboxsampling
    label:      "Probes:"
    frame:      frame_IOsampling  
    #row:        0                   # optional
    popupinput: sampling             # required
    outputprefix:                    # optional
      AMR-Wind: sampling       
    outputlist:                      # optional
      AMR-Wind: labels

  - name:       listboxtagging
    label:      "Refinement zones:"
    frame:      frame_refinement
    popupinput: tagging
    outputlist:                      # optional
      AMR-Wind: labels
